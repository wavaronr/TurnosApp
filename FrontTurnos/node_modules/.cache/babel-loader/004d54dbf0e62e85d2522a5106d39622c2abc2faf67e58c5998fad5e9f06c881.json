{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/components/ProgrammingCalendar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useCalendar } from '../context/CalendarContext.js';\nimport '../css/ProgrammingCalendar.css';\nimport { shiftColors } from '../utils/shiftColors.js';\n\n// Helper to format shift titles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatShiftTitle = shift => {\n  if (shift === 'morning') return 'Mañana';\n  if (shift === 'afternoon') return 'Tarde';\n  if (shift === 'night') return 'Noche';\n  if (shift === 'off') return 'Libre';\n  return shift;\n};\n\n// New advanced abbreviation function\nconst getAbbreviations = people => {\n  const abbreviations = new Map();\n  const usedCodes = new Set();\n  people.forEach(person => {\n    const parts = person.name.trim().toUpperCase().split(' ').filter(p => p);\n    let code = '';\n    if (parts.length >= 2) {\n      code = parts[0].substring(0, 2) + parts[1].substring(0, 2);\n    } else if (parts.length === 1) {\n      code = parts[0].substring(0, 4);\n    }\n\n    // Handle collisions\n    if (usedCodes.has(code)) {\n      // Try 1st and 3rd letter of the first name\n      if (parts.length >= 2 && parts[0].length >= 3) {\n        const alternativeCode = parts[0][0] + parts[0][2] + parts[1].substring(0, 2);\n        if (!usedCodes.has(alternativeCode)) {\n          code = alternativeCode;\n        } else {\n          // Fallback for further collisions: add a number\n          let i = 2;\n          while (usedCodes.has(code.substring(0, 3) + i)) {\n            i++;\n          }\n          code = code.substring(0, 3) + i;\n        }\n      }\n    }\n    abbreviations.set(person.id, code);\n    usedCodes.add(code);\n  });\n  return abbreviations;\n};\nconst ShiftLegend = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"shift-legend\",\n  children: Object.entries(shiftColors).map(([shift, color]) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"legend-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"legend-color\",\n      style: {\n        backgroundColor: color\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), formatShiftTitle(shift)]\n  }, shift, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 58,\n  columnNumber: 3\n}, this);\n_c = ShiftLegend;\nfunction ProgrammingCalendar({\n  date\n}) {\n  _s();\n  const {\n    shifts,\n    colombianHolidays\n  } = useCalendar();\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  if (year !== 2025 || month !== 8) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-pro-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay datos de programaci\\xF3n para este mes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n  const firstDayOfMonth = new Date(year, month, 1).getDay();\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\n  const isHoliday = day => {\n    if (!colombianHolidays) return '';\n    const holiday = colombianHolidays.find(h => h.dia === day && h.mes === month + 1);\n    return holiday ? 'holiday' : '';\n  };\n  const getShiftsForDay = day => {\n    if (!shifts) return null;\n    const dayString = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\n    return shifts[dayString] || null;\n  };\n  const allCells = [...Array(firstDayOfMonth).fill(null), ...Array.from({\n    length: daysInMonth\n  }, (_, i) => i + 1)];\n  while (allCells.length % 7 !== 0) {\n    allCells.push(null);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-pro-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(ShiftLegend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-pro\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Dom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Lun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Mar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Mie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Jue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Vie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Sab\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), allCells.map((day, index) => {\n        if (!day) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-cell-pro empty\"\n          }, `empty-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 20\n          }, this);\n        }\n        const dayShifts = getShiftsForDay(day);\n\n        // Generate abbreviations for all people in the current day\n        const allPeople = dayShifts ? Object.values(dayShifts).flat() : [];\n        const abbreviations = getAbbreviations(allPeople);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `day-cell-pro ${isHoliday(day)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-number-pro\",\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"people-list-pro\",\n            children: dayShifts ? Object.entries(dayShifts).flatMap(([shift, people]) => people.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"person-item\",\n              title: person.name,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"shift-dot\",\n                style: {\n                  backgroundColor: shiftColors[shift]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 25\n              }, this), abbreviations.get(person.id)]\n            }, `${person.id}-${shift}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 23\n            }, this))) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(ProgrammingCalendar, \"nmd9Ps4CycWgH9m9/SNjrrnJbG0=\", false, function () {\n  return [useCalendar];\n});\n_c2 = ProgrammingCalendar;\nexport default ProgrammingCalendar;\nvar _c, _c2;\n$RefreshReg$(_c, \"ShiftLegend\");\n$RefreshReg$(_c2, \"ProgrammingCalendar\");","map":{"version":3,"names":["React","useCalendar","shiftColors","jsxDEV","_jsxDEV","formatShiftTitle","shift","getAbbreviations","people","abbreviations","Map","usedCodes","Set","forEach","person","parts","name","trim","toUpperCase","split","filter","p","code","length","substring","has","alternativeCode","i","set","id","add","ShiftLegend","className","children","Object","entries","map","color","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","ProgrammingCalendar","date","_s","shifts","colombianHolidays","year","getFullYear","month","getMonth","firstDayOfMonth","Date","getDay","daysInMonth","getDate","isHoliday","day","holiday","find","h","dia","mes","getShiftsForDay","dayString","String","padStart","allCells","Array","fill","from","_","push","index","dayShifts","allPeople","values","flat","flatMap","title","get","_c2","$RefreshReg$"],"sources":["/home/user/calendario/src/components/ProgrammingCalendar.js"],"sourcesContent":["\nimport React from 'react';\nimport { useCalendar } from '../context/CalendarContext.js';\nimport '../css/ProgrammingCalendar.css';\nimport { shiftColors } from '../utils/shiftColors.js';\n\n// Helper to format shift titles\nconst formatShiftTitle = (shift) => {\n  if (shift === 'morning') return 'Mañana';\n  if (shift === 'afternoon') return 'Tarde';\n  if (shift === 'night') return 'Noche';\n  if (shift === 'off') return 'Libre';\n  return shift;\n};\n\n// New advanced abbreviation function\nconst getAbbreviations = (people) => {\n  const abbreviations = new Map();\n  const usedCodes = new Set();\n\n  people.forEach(person => {\n    const parts = person.name.trim().toUpperCase().split(' ').filter(p => p);\n    let code = '';\n\n    if (parts.length >= 2) {\n      code = parts[0].substring(0, 2) + parts[1].substring(0, 2);\n    } else if (parts.length === 1) {\n      code = parts[0].substring(0, 4);\n    }\n\n    // Handle collisions\n    if (usedCodes.has(code)) {\n      // Try 1st and 3rd letter of the first name\n      if (parts.length >= 2 && parts[0].length >= 3) {\n        const alternativeCode = parts[0][0] + parts[0][2] + parts[1].substring(0, 2);\n        if (!usedCodes.has(alternativeCode)) {\n          code = alternativeCode;\n        } else {\n          // Fallback for further collisions: add a number\n          let i = 2;\n          while (usedCodes.has(code.substring(0, 3) + i)) {\n            i++;\n          }\n          code = code.substring(0, 3) + i;\n        }\n      }\n    }\n    \n    abbreviations.set(person.id, code);\n    usedCodes.add(code);\n  });\n\n  return abbreviations;\n};\n\n\nconst ShiftLegend = () => (\n  <div className=\"shift-legend\">\n    {Object.entries(shiftColors).map(([shift, color]) => (\n      <div key={shift} className=\"legend-item\">\n        <span className=\"legend-color\" style={{ backgroundColor: color }}></span>\n        {formatShiftTitle(shift)}\n      </div>\n    ))}\n  </div>\n);\n\nfunction ProgrammingCalendar({ date }) {\n  const { shifts, colombianHolidays } = useCalendar();\n  const year = date.getFullYear();\n  const month = date.getMonth();\n\n  if (year !== 2025 || month !== 8) {\n    return (\n      <div className=\"calendar-pro-wrapper\">\n        <p>No hay datos de programación para este mes.</p>\n      </div>\n    );\n  }\n\n  const firstDayOfMonth = new Date(year, month, 1).getDay();\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\n\n  const isHoliday = (day) => {\n    if (!colombianHolidays) return '';\n    const holiday = colombianHolidays.find(h => h.dia === day && h.mes === month + 1);\n    return holiday ? 'holiday' : '';\n  };\n\n  const getShiftsForDay = (day) => {\n    if (!shifts) return null;\n    const dayString = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\n    return shifts[dayString] || null;\n  };\n\n  const allCells = [\n    ...Array(firstDayOfMonth).fill(null),\n    ...Array.from({ length: daysInMonth }, (_, i) => i + 1)\n  ];\n\n  while (allCells.length % 7 !== 0) {\n    allCells.push(null);\n  }\n\n  return (\n    <div className=\"calendar-pro-wrapper\">\n      <ShiftLegend />\n      <div className=\"calendar-pro\">\n        <div className=\"header-pro\">Dom</div>\n        <div className=\"header-pro\">Lun</div>\n        <div className=\"header-pro\">Mar</div>\n        <div className=\"header-pro\">Mie</div>\n        <div className=\"header-pro\">Jue</div>\n        <div className=\"header-pro\">Vie</div>\n        <div className=\"header-pro\">Sab</div>\n\n        {allCells.map((day, index) => {\n          if (!day) {\n            return <div className=\"day-cell-pro empty\" key={`empty-${index}`}></div>;\n          }\n          const dayShifts = getShiftsForDay(day);\n          \n          // Generate abbreviations for all people in the current day\n          const allPeople = dayShifts ? Object.values(dayShifts).flat() : [];\n          const abbreviations = getAbbreviations(allPeople);\n\n          return (\n            <div className={`day-cell-pro ${isHoliday(day)}`} key={day}>\n              <div className=\"day-number-pro\">{day}</div>\n              <div className=\"people-list-pro\">\n                {dayShifts ? (\n                  Object.entries(dayShifts).flatMap(([shift, people]) =>\n                    people.map((person) => (\n                      <div key={`${person.id}-${shift}`} className=\"person-item\" title={person.name}>\n                        <span className=\"shift-dot\" style={{ backgroundColor: shiftColors[shift] }}></span>\n                        {abbreviations.get(person.id)}\n                      </div>\n                    ))\n                  )\n                ) : (\n                  <div></div>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default ProgrammingCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}