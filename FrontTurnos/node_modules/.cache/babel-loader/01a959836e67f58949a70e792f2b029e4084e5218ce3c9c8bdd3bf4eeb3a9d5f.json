{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/components/DayCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport '../css/WeekDetail.css';\nimport AssignPersonModal from './AssignPersonModal.js';\nimport { useCalendar } from '../context/CalendarContext.js';\nimport { ProfileContext } from '../context/ProfileContext.js';\n// Se elimina la importación de formatNames ya que la lógica se manejará localmente.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShiftSection = ({\n  title,\n  people,\n  onAdd,\n  onRemove,\n  profile\n}) => {\n  // Lógica para generar nombres cortos únicos\n  const getBaseShortName = fullName => {\n    if (!fullName || typeof fullName !== 'string') return '';\n    const parts = fullName.trim().toLowerCase().split(' ');\n    if (parts.length < 2) return parts[0] || '';\n    return `${parts[0].charAt(0)}${parts[1]}`;\n  };\n  const processedNames = people.reduce((acc, person) => {\n    acc[person.id] = {\n      base: getBaseShortName(person.name),\n      fullName: person.name\n    };\n    return acc;\n  }, {});\n  const counts = people.reduce((acc, person) => {\n    const baseName = processedNames[person.id].base;\n    acc[baseName] = (acc[baseName] || 0) + 1;\n    return acc;\n  }, {});\n  const finalShortNames = people.reduce((acc, person) => {\n    const {\n      base,\n      fullName\n    } = processedNames[person.id];\n    if (counts[base] > 1) {\n      const parts = fullName.trim().toLowerCase().split(' ');\n      if (parts.length > 2) {\n        // Si hay colisión y existe una tercera palabra, se añade su inicial.\n        acc[person.id] = `${base}${parts[2].charAt(0)}`;\n      } else {\n        acc[person.id] = base; // No se puede resolver, se mantiene el base\n      }\n    } else {\n      acc[person.id] = base;\n    }\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shift-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"shift-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"people-list\",\n      children: people.map(person => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"person-pill\",\n        title: person.name,\n        children: [finalShortNames[person.id], (profile === null || profile === void 0 ? void 0 : profile.role) === 'ADM' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onRemove(person.id),\n          className: \"remove-person-btn\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 41\n        }, this)]\n      }, person.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), (profile === null || profile === void 0 ? void 0 : profile.role) === 'ADM' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAdd,\n      className: \"add-person-btn\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = ShiftSection;\nfunction DayCard({\n  day,\n  people\n}) {\n  _s();\n  const {\n    colombianHolidays,\n    shifts,\n    assignShift,\n    removeShift,\n    getValidPeopleForShift\n  } = useCalendar();\n  const {\n    profile\n  } = useContext(ProfileContext);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedShift, setSelectedShift] = useState(null);\n  const [validPeople, setValidPeople] = useState([]);\n  const dayString = day.toISOString().split('T')[0];\n  const dayShifts = shifts[dayString] || {\n    morning: [],\n    afternoon: [],\n    night: [],\n    off: []\n  };\n  const dayOfMonth = day.getDate();\n  const month = day.getMonth() + 1;\n  const isHoliday = colombianHolidays.some(h => h.dia === dayOfMonth && h.mes === month);\n  const dayName = day.toLocaleDateString('es-ES', {\n    weekday: 'short'\n  });\n  const cardStyle = {\n    ...(isHoliday && {\n      backgroundColor: '#fdd'\n    }),\n    listStyle: 'none'\n  };\n  const dayNumberStyle = {\n    ...(isHoliday && {\n      color: 'red',\n      fontWeight: 'bold'\n    })\n  };\n  const shiftTypes = [{\n    id: 'morning',\n    title: 'Mañana'\n  }, {\n    id: 'afternoon',\n    title: 'Tarde'\n  }, {\n    id: 'night',\n    title: 'Noche'\n  }, {\n    id: 'off',\n    title: 'Libre'\n  }];\n  const handleAddPerson = shiftType => {\n    const validPeopleForShift = getValidPeopleForShift(day, shiftType, people);\n    setValidPeople(validPeopleForShift);\n    setSelectedShift(shiftType);\n    setIsModalOpen(true);\n  };\n  const handleSelectPerson = person => {\n    assignShift(day, selectedShift, person);\n    setIsModalOpen(false);\n  };\n  const handleRemovePerson = (shiftType, personId) => {\n    removeShift(day, shiftType, personId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-card\",\n    style: cardStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-name\",\n        children: dayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-number\",\n        style: dayNumberStyle,\n        children: dayOfMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shifts-container\",\n      children: shiftTypes.map(shift => /*#__PURE__*/_jsxDEV(ShiftSection, {\n        title: shift.title,\n        people: dayShifts[shift.id],\n        onAdd: () => handleAddPerson(shift.id),\n        onRemove: personId => handleRemovePerson(shift.id, personId),\n        profile: profile\n      }, shift.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(AssignPersonModal, {\n      people: validPeople,\n      onSelect: handleSelectPerson,\n      onClose: () => setIsModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(DayCard, \"Gq4QI95XAKXy8aQ+6Mdxo1b5ix4=\", false, function () {\n  return [useCalendar];\n});\n_c2 = DayCard;\nexport default DayCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"ShiftSection\");\n$RefreshReg$(_c2, \"DayCard\");","map":{"version":3,"names":["React","useState","useContext","AssignPersonModal","useCalendar","ProfileContext","jsxDEV","_jsxDEV","ShiftSection","title","people","onAdd","onRemove","profile","getBaseShortName","fullName","parts","trim","toLowerCase","split","length","charAt","processedNames","reduce","acc","person","id","base","name","counts","baseName","finalShortNames","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","role","onClick","_c","DayCard","day","_s","colombianHolidays","shifts","assignShift","removeShift","getValidPeopleForShift","isModalOpen","setIsModalOpen","selectedShift","setSelectedShift","validPeople","setValidPeople","dayString","toISOString","dayShifts","morning","afternoon","night","off","dayOfMonth","getDate","month","getMonth","isHoliday","some","h","dia","mes","dayName","toLocaleDateString","weekday","cardStyle","backgroundColor","listStyle","dayNumberStyle","color","fontWeight","shiftTypes","handleAddPerson","shiftType","validPeopleForShift","handleSelectPerson","handleRemovePerson","personId","style","shift","onSelect","onClose","_c2","$RefreshReg$"],"sources":["/home/user/calendario/src/components/DayCard.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport '../css/WeekDetail.css';\nimport AssignPersonModal from './AssignPersonModal.js';\nimport { useCalendar } from '../context/CalendarContext.js';\nimport { ProfileContext } from '../context/ProfileContext.js';\n// Se elimina la importación de formatNames ya que la lógica se manejará localmente.\n\nconst ShiftSection = ({ title, people, onAdd, onRemove, profile }) => {\n  // Lógica para generar nombres cortos únicos\n  const getBaseShortName = (fullName) => {\n    if (!fullName || typeof fullName !== 'string') return '';\n    const parts = fullName.trim().toLowerCase().split(' ');\n    if (parts.length < 2) return parts[0] || '';\n    return `${parts[0].charAt(0)}${parts[1]}`;\n  };\n\n  const processedNames = people.reduce((acc, person) => {\n    acc[person.id] = { base: getBaseShortName(person.name), fullName: person.name };\n    return acc;\n  }, {});\n\n  const counts = people.reduce((acc, person) => {\n    const baseName = processedNames[person.id].base;\n    acc[baseName] = (acc[baseName] || 0) + 1;\n    return acc;\n  }, {});\n\n  const finalShortNames = people.reduce((acc, person) => {\n    const { base, fullName } = processedNames[person.id];\n    if (counts[base] > 1) {\n      const parts = fullName.trim().toLowerCase().split(' ');\n      if (parts.length > 2) {\n        // Si hay colisión y existe una tercera palabra, se añade su inicial.\n        acc[person.id] = `${base}${parts[2].charAt(0)}`;\n      } else {\n        acc[person.id] = base; // No se puede resolver, se mantiene el base\n      }\n    } else {\n      acc[person.id] = base;\n    }\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"shift-section\">\n      <h6 className=\"shift-title\">{title}</h6>\n      <div className=\"people-list\">\n        {people.map(person => (\n          <span key={person.id} className=\"person-pill\" title={person.name}>\n            {finalShortNames[person.id]}\n            {profile?.role === 'ADM' && <button onClick={() => onRemove(person.id)} className=\"remove-person-btn\">X</button>}\n          </span>\n        ))}\n      </div>\n      {profile?.role === 'ADM' && <button onClick={onAdd} className=\"add-person-btn\">+</button>}\n    </div>\n  );\n};\n\nfunction DayCard({ day, people }) {\n  const {\n    colombianHolidays,\n    shifts,\n    assignShift,\n    removeShift,\n    getValidPeopleForShift\n  } = useCalendar();\n  const { profile } = useContext(ProfileContext);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedShift, setSelectedShift] = useState(null);\n  const [validPeople, setValidPeople] = useState([]);\n\n  const dayString = day.toISOString().split('T')[0];\n  const dayShifts = shifts[dayString] || { morning: [], afternoon: [], night: [], off: [] };\n\n  const dayOfMonth = day.getDate();\n  const month = day.getMonth() + 1;\n  const isHoliday = colombianHolidays.some(h => h.dia === dayOfMonth && h.mes === month);\n  const dayName = day.toLocaleDateString('es-ES', { weekday: 'short' });\n\n  const cardStyle = { ...(isHoliday && { backgroundColor: '#fdd' }), listStyle: 'none' };\n  const dayNumberStyle = { ...(isHoliday && { color: 'red', fontWeight: 'bold' }) };\n\n  const shiftTypes = [\n    { id: 'morning', title: 'Mañana' },\n    { id: 'afternoon', title: 'Tarde' },\n    { id: 'night', title: 'Noche' },\n    { id: 'off', title: 'Libre' },\n  ];\n\n  const handleAddPerson = (shiftType) => {\n    const validPeopleForShift = getValidPeopleForShift(day, shiftType, people);\n    setValidPeople(validPeopleForShift);\n    setSelectedShift(shiftType);\n    setIsModalOpen(true);\n  };\n\n  const handleSelectPerson = (person) => {\n    assignShift(day, selectedShift, person);\n    setIsModalOpen(false);\n  };\n\n  const handleRemovePerson = (shiftType, personId) => {\n    removeShift(day, shiftType, personId);\n  };\n\n  return (\n    <div className=\"day-card\" style={cardStyle}>\n      <div className=\"day-header\">\n        <div className=\"day-name\">{dayName}</div>\n        <div className=\"day-number\" style={dayNumberStyle}>{dayOfMonth}</div>\n      </div>\n      <div className=\"shifts-container\">\n        {shiftTypes.map((shift) => (\n          <ShiftSection\n            key={shift.id}\n            title={shift.title}\n            people={dayShifts[shift.id]}\n            onAdd={() => handleAddPerson(shift.id)}\n            onRemove={(personId) => handleRemovePerson(shift.id, personId)}\n            profile={profile}\n          />\n        ))}\n      </div>\n\n      {isModalOpen && (\n        <AssignPersonModal\n          people={validPeople}\n          onSelect={handleSelectPerson}\n          onClose={() => setIsModalOpen(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default DayCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}