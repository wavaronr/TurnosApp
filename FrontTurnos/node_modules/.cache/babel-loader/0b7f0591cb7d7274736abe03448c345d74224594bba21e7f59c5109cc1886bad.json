{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/components/ProgrammingCalendar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useCalendar } from '../context/CalendarContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProgrammingCalendar({\n  date\n}) {\n  _s();\n  const {\n    people,\n    holidays,\n    assignedDays\n  } = useCalendar();\n  if (!assignedDays || !people) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const firstDayOfMonth = new Date(year, month, 1).getDay();\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\n  const isHoliday = day => {\n    const holiday = holidays.find(h => h.day === day && h.month - 1 === month);\n    return holiday ? 'holiday' : '';\n  };\n  const getPeopleForDay = day => {\n    const key = `${year}-${month + 1}-${day}`;\n    const dayAssignments = assignedDays[key] || {};\n    return Object.keys(dayAssignments).map(personId => {\n      const person = people.find(p => p.id.toString() === personId);\n      return person ? person.name : null;\n    }).filter(name => name !== null);\n  };\n  const allCells = [...Array(firstDayOfMonth).fill(null), ...Array.from({\n    length: daysInMonth\n  }, (_, i) => i + 1)];\n  while (allCells.length % 7 !== 0) {\n    allCells.push(null);\n  }\n  const weeks = [];\n  for (let i = 0; i < allCells.length; i += 7) {\n    weeks.push(allCells.slice(i, i + 7));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-pro-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-pro\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro week-num-header\",\n        children: \"Sem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), weeks.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"week-num-cell\",\n        children: index + 1\n      }, `week-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Dom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Lun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Mar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Mie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Jue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Vie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Sab\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), allCells.map((day, index) => {\n        if (!day) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-cell-pro empty\"\n          }, `empty-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 20\n          }, this);\n        }\n        const peopleOnDay = getPeopleForDay(day);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `day-cell-pro ${isHoliday(day)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-number-pro\",\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"people-list-pro\",\n            children: peopleOnDay.map((name, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: name\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 47\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ProgrammingCalendar, \"ahkQP5W5CfFzxIYONJduQ1CFkk4=\", false, function () {\n  return [useCalendar];\n});\n_c = ProgrammingCalendar;\nexport default ProgrammingCalendar;\nvar _c;\n$RefreshReg$(_c, \"ProgrammingCalendar\");","map":{"version":3,"names":["React","useCalendar","jsxDEV","_jsxDEV","ProgrammingCalendar","date","_s","people","holidays","assignedDays","children","fileName","_jsxFileName","lineNumber","columnNumber","year","getFullYear","month","getMonth","firstDayOfMonth","Date","getDay","daysInMonth","getDate","isHoliday","day","holiday","find","h","getPeopleForDay","key","dayAssignments","Object","keys","map","personId","person","p","id","toString","name","filter","allCells","Array","fill","from","length","_","i","push","weeks","slice","className","index","peopleOnDay","_c","$RefreshReg$"],"sources":["/home/user/calendario/src/components/ProgrammingCalendar.js"],"sourcesContent":["import React from 'react';\nimport { useCalendar } from '../context/CalendarContext.js';\n\nfunction ProgrammingCalendar({ date }) {\n  const { people, holidays, assignedDays } = useCalendar();\n\n  if (!assignedDays || !people) {\n    return <div>Cargando...</div>;\n  }\n\n  const year = date.getFullYear();\n  const month = date.getMonth();\n\n  const firstDayOfMonth = new Date(year, month, 1).getDay();\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\n\n  const isHoliday = (day) => {\n    const holiday = holidays.find(h => h.day === day && h.month - 1 === month);\n    return holiday ? 'holiday' : '';\n  };\n\n  const getPeopleForDay = (day) => {\n    const key = `${year}-${month + 1}-${day}`;\n    const dayAssignments = assignedDays[key] || {};\n    return Object.keys(dayAssignments).map(personId => {\n      const person = people.find(p => p.id.toString() === personId);\n      return person ? person.name : null;\n    }).filter(name => name !== null);\n  };\n\n  const allCells = [\n    ...Array(firstDayOfMonth).fill(null),\n    ...Array.from({ length: daysInMonth }, (_, i) => i + 1)\n  ];\n\n  while (allCells.length % 7 !== 0) {\n    allCells.push(null);\n  }\n\n  const weeks = [];\n  for (let i = 0; i < allCells.length; i += 7) {\n    weeks.push(allCells.slice(i, i + 7));\n  }\n\n  return (\n    <div className=\"calendar-pro-wrapper\">\n      <div className=\"calendar-pro\">\n        <div className=\"header-pro week-num-header\">Sem</div>\n        {weeks.map((_, index) => (\n          <div className=\"week-num-cell\" key={`week-${index}`}>{index + 1}</div>\n        ))}\n\n        <div className=\"header-pro\">Dom</div>\n        <div className=\"header-pro\">Lun</div>\n        <div className=\"header-pro\">Mar</div>\n        <div className=\"header-pro\">Mie</div>\n        <div className=\"header-pro\">Jue</div>\n        <div className=\"header-pro\">Vie</div>\n        <div className=\"header-pro\">Sab</div>\n\n        {allCells.map((day, index) => {\n          if (!day) {\n            return <div className=\"day-cell-pro empty\" key={`empty-${index}`}></div>;\n          }\n          const peopleOnDay = getPeopleForDay(day);\n          return (\n            <div className={`day-cell-pro ${isHoliday(day)}`} key={day}>\n              <div className=\"day-number-pro\">{day}</div>\n              <div className=\"people-list-pro\">\n                {peopleOnDay.map((name, i) => <div key={i}>{name}</div>)}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default ProgrammingCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}