{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/components/Calendarios.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../css/calendario.css';\nimport DaysCalendar from './DaysCalendar.js';\nimport WeekCount from './WeekCount.js';\n// Import the new Zustand store\nimport useCalendarStore from '../store/calendarStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendarios({\n  monthCalendario\n}) {\n  _s();\n  // Get holidays from the new store\n  const {\n    holidays\n  } = useCalendarStore();\n\n  // TODO: The concept of a global 'yearSet' is deprecated.\n  // The year should be passed down as a prop or managed differently.\n  // For now, hardcoding to 2025 to fix compilation.\n  const yearSet = 2025;\n  const countDays = new Date(yearSet, monthCalendario + 1, 0).getDate();\n  const days = Array.from({\n    length: countDays\n  }, (_, index) => index + 1);\n  const daysTitle = ['Dom', 'Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(WeekCount, {\n      monthCalendario: monthCalendario\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"ol\",\n      children: [daysTitle.map(dayL => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `dayLetter`,\n        children: dayL\n      }, dayL, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)), days.map(day => /*#__PURE__*/_jsxDEV(DaysCalendar, {\n        day: day,\n        monthCalendario: monthCalendario\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendarios, \"hs1eWYBeER3GN7AlTOPYSOietO8=\", false, function () {\n  return [useCalendarStore];\n});\n_c = Calendarios;\nexport default Calendarios;\nvar _c;\n$RefreshReg$(_c, \"Calendarios\");","map":{"version":3,"names":["React","DaysCalendar","WeekCount","useCalendarStore","jsxDEV","_jsxDEV","Calendarios","monthCalendario","_s","holidays","yearSet","countDays","Date","getDate","days","Array","from","length","_","index","daysTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","dayL","day","_c","$RefreshReg$"],"sources":["/home/user/calendario/src/components/Calendarios.js"],"sourcesContent":["import React from 'react';\nimport '../css/calendario.css';\nimport DaysCalendar from './DaysCalendar.js';\nimport WeekCount from './WeekCount.js';\n// Import the new Zustand store\nimport useCalendarStore from '../store/calendarStore';\n\nfunction Calendarios({ monthCalendario }) {\n  // Get holidays from the new store\n  const { holidays } = useCalendarStore();\n  \n  // TODO: The concept of a global 'yearSet' is deprecated.\n  // The year should be passed down as a prop or managed differently.\n  // For now, hardcoding to 2025 to fix compilation.\n  const yearSet = 2025;\n\n  const countDays = new Date(yearSet, monthCalendario + 1, 0).getDate();\n  const days = Array.from({ length: countDays }, (_, index) => index + 1);\n  const daysTitle = ['Dom', 'Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab'];\n\n  return (\n    <div className=\"calendar\">\n      <WeekCount\n        monthCalendario={monthCalendario}\n      />\n      <ol className=\"ol\">\n        {daysTitle.map((dayL) => (\n          <li className={`dayLetter`} key={dayL}>\n            {dayL}\n          </li>\n        ))}\n\n        {days.map((day) => (\n          <DaysCalendar\n            key={day}\n            day={day}\n            monthCalendario={monthCalendario}\n          />\n        ))}\n      </ol>\n    </div>\n  );\n}\n\nexport default Calendarios;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,uBAAuB;AAC9B,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,SAAS,MAAM,gBAAgB;AACtC;AACA,OAAOC,gBAAgB,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,WAAWA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACxC;EACA,MAAM;IAAEC;EAAS,CAAC,GAAGN,gBAAgB,CAAC,CAAC;;EAEvC;EACA;EACA;EACA,MAAMO,OAAO,GAAG,IAAI;EAEpB,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,OAAO,EAAEH,eAAe,GAAG,CAAC,EAAE,CAAC,CAAC,CAACM,OAAO,CAAC,CAAC;EACrE,MAAMC,IAAI,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEN;EAAU,CAAC,EAAE,CAACO,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC;EACvE,MAAMC,SAAS,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAEnE,oBACEf,OAAA;IAAKgB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBjB,OAAA,CAACH,SAAS;MACRK,eAAe,EAAEA;IAAgB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFrB,OAAA;MAAIgB,SAAS,EAAC,IAAI;MAAAC,QAAA,GACfF,SAAS,CAACO,GAAG,CAAEC,IAAI,iBAClBvB,OAAA;QAAIgB,SAAS,EAAE,WAAY;QAAAC,QAAA,EACxBM;MAAI,GAD0BA,IAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjC,CACL,CAAC,EAEDZ,IAAI,CAACa,GAAG,CAAEE,GAAG,iBACZxB,OAAA,CAACJ,YAAY;QAEX4B,GAAG,EAAEA,GAAI;QACTtB,eAAe,EAAEA;MAAgB,GAF5BsB,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGT,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAClB,EAAA,CAnCQF,WAAW;EAAA,QAEGH,gBAAgB;AAAA;AAAA2B,EAAA,GAF9BxB,WAAW;AAqCpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}