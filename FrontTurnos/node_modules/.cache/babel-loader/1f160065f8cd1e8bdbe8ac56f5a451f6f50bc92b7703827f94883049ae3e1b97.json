{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/FrontTurnos/src/context/ProfileContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// 1. Crear el Contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProfileContext = /*#__PURE__*/createContext();\n\n// 2. Crear el Proveedor del Contexto\nexport const ProfileProvider = ({\n  children\n}) => {\n  _s();\n  // 3. Crear el estado para el perfil\n  const [profile, setProfile] = useState(null);\n\n  // 6. Efecto para cargar el perfil desde localStorage al iniciar la app\n  useEffect(() => {\n    const storedProfile = localStorage.getItem('profile');\n    if (storedProfile) {\n      try {\n        // Intentamos convertir el string a un objeto JSON\n        const profileObject = JSON.parse(storedProfile);\n        setProfile(profileObject);\n      } catch (error) {\n        // Si falla (ej. es un string como \"ADM\"), lo ignoramos y limpiamos\n        console.warn(\"Perfil en localStorage no era un objeto JSON válido, se ignora.\");\n        localStorage.removeItem('profile');\n      }\n    }\n  }, []);\n\n  // 4. Función de Login\n  const login = (profileData, token) => {\n    const profileObject = {\n      role: profileData.role,\n      email: profileData.email\n    };\n    // Guardamos el objeto como string JSON en localStorage\n    localStorage.setItem('profile', JSON.stringify(profileObject));\n    localStorage.setItem('token', token);\n    // Actualizamos el estado de React\n    setProfile(profileObject);\n  };\n\n  // 5. Función de Logout\n  const logout = () => {\n    // Limpiamos localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('profile');\n    localStorage.removeItem('email'); // También limpiamos el email por si acaso\n    // Limpiamos el estado de React a null\n    setProfile(null);\n  };\n\n  // Exponemos el estado y las funciones a los componentes hijos\n  const value = {\n    profile,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(ProfileContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileProvider, \"ANwzos52wNXGupoJVH1cRI1qCto=\");\n_c = ProfileProvider;\nvar _c;\n$RefreshReg$(_c, \"ProfileProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ProfileContext","ProfileProvider","children","_s","profile","setProfile","storedProfile","localStorage","getItem","profileObject","JSON","parse","error","console","warn","removeItem","login","profileData","token","role","email","setItem","stringify","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/calendario/FrontTurnos/src/context/ProfileContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\n// 1. Crear el Contexto\nexport const ProfileContext = createContext();\n\n// 2. Crear el Proveedor del Contexto\nexport const ProfileProvider = ({ children }) => {\n  // 3. Crear el estado para el perfil\n  const [profile, setProfile] = useState(null);\n\n  // 6. Efecto para cargar el perfil desde localStorage al iniciar la app\n  useEffect(() => {\n    const storedProfile = localStorage.getItem('profile');\n    if (storedProfile) {\n      try {\n        // Intentamos convertir el string a un objeto JSON\n        const profileObject = JSON.parse(storedProfile);\n        setProfile(profileObject);\n      } catch (error) {\n        // Si falla (ej. es un string como \"ADM\"), lo ignoramos y limpiamos\n        console.warn(\"Perfil en localStorage no era un objeto JSON válido, se ignora.\");\n        localStorage.removeItem('profile');\n      }\n    }\n  }, []);\n\n  // 4. Función de Login\n  const login = (profileData, token) => {\n    const profileObject = {\n      role: profileData.role,\n      email: profileData.email\n    };\n    // Guardamos el objeto como string JSON en localStorage\n    localStorage.setItem('profile', JSON.stringify(profileObject));\n    localStorage.setItem('token', token);\n    // Actualizamos el estado de React\n    setProfile(profileObject);\n  };\n\n  // 5. Función de Logout\n  const logout = () => {\n    // Limpiamos localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('profile');\n    localStorage.removeItem('email'); // También limpiamos el email por si acaso\n    // Limpiamos el estado de React a null\n    setProfile(null);\n  };\n\n  // Exponemos el estado y las funciones a los componentes hijos\n  const value = { profile, login, logout };\n\n  return (\n    <ProfileContext.Provider value={value}>\n      {children}\n    </ProfileContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;;AAE7C;AACA,OAAO,MAAMM,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACrD,IAAIF,aAAa,EAAE;MACjB,IAAI;QACF;QACA,MAAMG,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC;QAC/CD,UAAU,CAACI,aAAa,CAAC;MAC3B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACd;QACAC,OAAO,CAACC,IAAI,CAAC,iEAAiE,CAAC;QAC/EP,YAAY,CAACQ,UAAU,CAAC,SAAS,CAAC;MACpC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,KAAK,GAAGA,CAACC,WAAW,EAAEC,KAAK,KAAK;IACpC,MAAMT,aAAa,GAAG;MACpBU,IAAI,EAAEF,WAAW,CAACE,IAAI;MACtBC,KAAK,EAAEH,WAAW,CAACG;IACrB,CAAC;IACD;IACAb,YAAY,CAACc,OAAO,CAAC,SAAS,EAAEX,IAAI,CAACY,SAAS,CAACb,aAAa,CAAC,CAAC;IAC9DF,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;IACpC;IACAb,UAAU,CAACI,aAAa,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMc,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAhB,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,SAAS,CAAC;IAClCR,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC;IACAV,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;;EAED;EACA,MAAMmB,KAAK,GAAG;IAAEpB,OAAO;IAAEY,KAAK;IAAEO;EAAO,CAAC;EAExC,oBACExB,OAAA,CAACC,cAAc,CAACyB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EACnCA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAAC1B,EAAA,CAnDWF,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}