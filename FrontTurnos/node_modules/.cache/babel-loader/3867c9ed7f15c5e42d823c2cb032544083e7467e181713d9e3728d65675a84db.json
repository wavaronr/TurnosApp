{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/components/ProgrammingCalendar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useCalendar } from '../context/CalendarContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProgrammingCalendar({\n  date\n}) {\n  _s();\n  const {\n    people,\n    holidays,\n    assignedDays\n  } = useCalendar();\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const firstDayOfMonth = new Date(year, month, 1).getDay();\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\n  const isHoliday = day => {\n    if (!holidays) return '';\n    // ¡CORREGIDO! Ahora también comprobamos el año.\n    const holiday = holidays.find(h => h.day === day && h.month - 1 === month && h.year === year);\n    return holiday ? 'holiday' : '';\n  };\n  const getPeopleForDay = day => {\n    if (!assignedDays || !people) {\n      return [];\n    }\n    const key = `${year}-${month + 1}-${day}`;\n    const dayAssignments = assignedDays[key] || {};\n    return Object.keys(dayAssignments).map(personId => {\n      const person = people.find(p => p.id.toString() === personId);\n      return person ? person.name : null;\n    }).filter(name => name !== null);\n  };\n  const allCells = [...Array(firstDayOfMonth).fill(null), ...Array.from({\n    length: daysInMonth\n  }, (_, i) => i + 1)];\n  while (allCells.length % 7 !== 0) {\n    allCells.push(null);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-pro-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-pro\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Dom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Lun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Mar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Mie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Jue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Vie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-pro\",\n        children: \"Sab\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), allCells.map((day, index) => {\n        if (!day) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-cell-pro empty\"\n          }, `empty-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 20\n          }, this);\n        }\n        const peopleOnDay = getPeopleForDay(day);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `day-cell-pro ${isHoliday(day)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-number-pro\",\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"people-list-pro\",\n            children: peopleOnDay.map((name, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: name\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 47\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ProgrammingCalendar, \"ahkQP5W5CfFzxIYONJduQ1CFkk4=\", false, function () {\n  return [useCalendar];\n});\n_c = ProgrammingCalendar;\nexport default ProgrammingCalendar;\nvar _c;\n$RefreshReg$(_c, \"ProgrammingCalendar\");","map":{"version":3,"names":["React","useCalendar","jsxDEV","_jsxDEV","ProgrammingCalendar","date","_s","people","holidays","assignedDays","year","getFullYear","month","getMonth","firstDayOfMonth","Date","getDay","daysInMonth","getDate","isHoliday","day","holiday","find","h","getPeopleForDay","key","dayAssignments","Object","keys","map","personId","person","p","id","toString","name","filter","allCells","Array","fill","from","length","_","i","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","peopleOnDay","_c","$RefreshReg$"],"sources":["/home/user/calendario/src/components/ProgrammingCalendar.js"],"sourcesContent":["import React from 'react';\nimport { useCalendar } from '../context/CalendarContext.js';\n\nfunction ProgrammingCalendar({ date }) {\n  const { people, holidays, assignedDays } = useCalendar();\n\n  const year = date.getFullYear();\n  const month = date.getMonth();\n\n  const firstDayOfMonth = new Date(year, month, 1).getDay();\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\n\n  const isHoliday = (day) => {\n    if (!holidays) return '';\n    // ¡CORREGIDO! Ahora también comprobamos el año.\n    const holiday = holidays.find(h => h.day === day && (h.month - 1) === month && h.year === year);\n    return holiday ? 'holiday' : '';\n  };\n\n  const getPeopleForDay = (day) => {\n    if (!assignedDays || !people) {\n      return [];\n    }\n    const key = `${year}-${month + 1}-${day}`;\n    const dayAssignments = assignedDays[key] || {};\n    return Object.keys(dayAssignments).map(personId => {\n      const person = people.find(p => p.id.toString() === personId);\n      return person ? person.name : null;\n    }).filter(name => name !== null);\n  };\n\n  const allCells = [\n    ...Array(firstDayOfMonth).fill(null),\n    ...Array.from({ length: daysInMonth }, (_, i) => i + 1)\n  ];\n\n  while (allCells.length % 7 !== 0) {\n    allCells.push(null);\n  }\n\n  return (\n    <div className=\"calendar-pro-wrapper\">\n      <div className=\"calendar-pro\">\n        <div className=\"header-pro\">Dom</div>\n        <div className=\"header-pro\">Lun</div>\n        <div className=\"header-pro\">Mar</div>\n        <div className=\"header-pro\">Mie</div>\n        <div className=\"header-pro\">Jue</div>\n        <div className=\"header-pro\">Vie</div>\n        <div className=\"header-pro\">Sab</div>\n\n        {allCells.map((day, index) => {\n          if (!day) {\n            return <div className=\"day-cell-pro empty\" key={`empty-${index}`}></div>;\n          }\n          const peopleOnDay = getPeopleForDay(day);\n          return (\n            <div className={`day-cell-pro ${isHoliday(day)}`} key={day}>\n              <div className=\"day-number-pro\">{day}</div>\n              <div className=\"people-list-pro\">\n                {peopleOnDay.map((name, i) => <div key={i}>{name}</div>)}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default ProgrammingCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}