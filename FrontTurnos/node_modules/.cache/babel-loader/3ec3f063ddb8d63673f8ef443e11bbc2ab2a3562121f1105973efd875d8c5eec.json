{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/components/CardsCald.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/calendario.css';\nimport AsesorOffCanvas from './AsesorOffCanvas';\nimport Calendarios from './Calendarios.js';\nimport YearInput from './yearinput';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CardsCald() {\n  _s();\n  const currentYear = new Date().getFullYear();\n  const [weekNumber, setWeekNumber] = useState(1);\n  const [yearSet, setYearSet] = useState(currentYear); // Estado para el año seleccionado\n\n  const months = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\n  const handleYearChange = newYear => {\n    setYearSet(newYear);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container text-left\",\n      children: /*#__PURE__*/_jsxDEV(YearInput, {\n        onYearChange: handleYearChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-profiles\",\n        children: [months.map(mes => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardcalendario\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: mes\n            }, 'card-title-cardcald', false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Calendarios, {\n              monthCalendario: months.indexOf(mes),\n              yearSet: yearSet,\n              setWeekNumber: setWeekNumber\n            }, 'Calendario-cardcald', false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 23\n            }, this)]\n          }, 'card-body-cardcald', true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, mes.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }, this)), /*#__PURE__*/_jsxDEV(AsesorOffCanvas, {\n          weekNumber: weekNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, 'card-content-cardcald', true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(CardsCald, \"4DxNqFf3+UfeO+YUCGVoXxTTr+0=\");\n_c = CardsCald;\nexport default CardsCald;\nvar _c;\n$RefreshReg$(_c, \"CardsCald\");","map":{"version":3,"names":["React","useState","AsesorOffCanvas","Calendarios","YearInput","jsxDEV","_jsxDEV","Fragment","_Fragment","CardsCald","_s","currentYear","Date","getFullYear","weekNumber","setWeekNumber","yearSet","setYearSet","months","handleYearChange","newYear","children","class","onYearChange","fileName","_jsxFileName","lineNumber","columnNumber","className","map","mes","monthCalendario","indexOf","toString","_c","$RefreshReg$"],"sources":["/home/user/calendario/src/components/CardsCald.js"],"sourcesContent":["      import React, { useState } from 'react';\n      import '../css/calendario.css';\n      \n      import AsesorOffCanvas from './AsesorOffCanvas';\n      import Calendarios from './Calendarios.js';\n      import YearInput from './yearinput';\n      \n      function CardsCald() {\n        const currentYear = new Date().getFullYear();\n        const [weekNumber, setWeekNumber] = useState(1);\n        const [yearSet, setYearSet] = useState(currentYear); // Estado para el año seleccionado\n      \n        const months = [\n          'Enero',\n          'Febrero',\n          'Marzo',\n          'Abril',\n          'Mayo',\n          'Junio',\n          'Julio',\n          'Agosto',\n          'Septiembre',\n          'Octubre',\n          'Noviembre',\n          'Diciembre',\n        ];\n      \n        const handleYearChange = (newYear) => {\n          setYearSet(newYear);\n        };\n      \n        return (\n          <>\n            <div class=\"container text-left\">\n              <YearInput onYearChange={handleYearChange} />\n            </div>\n            <div class=\"container text-center\">\n              <div className=\"card-profiles\" key={'card-content-cardcald'}>\n                {months.map((mes) => (\n                  <div\n                    className=\"cardcalendario\"\n                    key={mes.toString()}\n                  >\n                    <div className=\"card-body\" key={'card-body-cardcald'}>\n                      <h5 className=\"card-title\" key={'card-title-cardcald'}>\n                        {mes}\n                      </h5>\n                      <Calendarios\n                        monthCalendario={months.indexOf(mes)}\n                        yearSet={yearSet}\n                        setWeekNumber={setWeekNumber}\n                        key={'Calendario-cardcald'}\n                      />\n                    </div>\n                  </div>\n                ))}\n                <AsesorOffCanvas weekNumber={weekNumber} />\n              </div>\n            </div>\n          </>\n        );\n      }\n      export default CardsCald;\n"],"mappings":";;AAAM,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAE9B,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAACU,WAAW,CAAC,CAAC,CAAC;;EAErD,MAAMO,MAAM,GAAG,CACb,OAAO,EACP,SAAS,EACT,OAAO,EACP,OAAO,EACP,MAAM,EACN,OAAO,EACP,OAAO,EACP,QAAQ,EACR,YAAY,EACZ,SAAS,EACT,WAAW,EACX,WAAW,CACZ;EAED,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IACpCH,UAAU,CAACG,OAAO,CAAC;EACrB,CAAC;EAED,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA;MAAKgB,KAAK,EAAC,qBAAqB;MAAAD,QAAA,eAC9Bf,OAAA,CAACF,SAAS;QAACmB,YAAY,EAAEJ;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACNrB,OAAA;MAAKgB,KAAK,EAAC,uBAAuB;MAAAD,QAAA,eAChCf,OAAA;QAAKsB,SAAS,EAAC,eAAe;QAAAP,QAAA,GAC3BH,MAAM,CAACW,GAAG,CAAEC,GAAG,iBACdxB,OAAA;UACEsB,SAAS,EAAC,gBAAgB;UAAAP,QAAA,eAG1Bf,OAAA;YAAKsB,SAAS,EAAC,WAAW;YAAAP,QAAA,gBACxBf,OAAA;cAAIsB,SAAS,EAAC,YAAY;cAAAP,QAAA,EACvBS;YAAG,GAD0B,qBAAqB;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEjD,CAAC,eACLrB,OAAA,CAACH,WAAW;cACV4B,eAAe,EAAEb,MAAM,CAACc,OAAO,CAACF,GAAG,CAAE;cACrCd,OAAO,EAAEA,OAAQ;cACjBD,aAAa,EAAEA;YAAc,GACxB,qBAAqB;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC;UAAA,GAT4B,oBAAoB;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAU/C;QAAC,GAZDG,GAAG,CAACG,QAAQ,CAAC,CAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAahB,CACN,CAAC,eACFrB,OAAA,CAACJ,eAAe;UAACY,UAAU,EAAEA;QAAW;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAnBT,uBAAuB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP;AAACjB,EAAA,CAtDQD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAuDlB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}