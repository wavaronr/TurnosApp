{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/components/DaysCalendar.js\";\nimport React from 'react';\nimport '../css/calendario.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DaysCalendar = ({\n  day,\n  colombianHolidays,\n  monthCalendario,\n  yearSet,\n  onDayClick\n}) => {\n  const isHoliday = colombianHolidays.some(holiday => holiday.day === day && holiday.month === monthCalendario + 1);\n  const date = new Date(yearSet, monthCalendario, day);\n  const dayOfWeek = date.getDay();\n  const handleClick = () => {\n    if (onDayClick) {\n      onDayClick(day, monthCalendario, yearSet);\n    }\n  };\n  const dayClass = isHoliday ? 'holiday' : '';\n  const gridColumn = day === 1 ? dayOfWeek + 1 : 'auto';\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `day ${dayClass}`,\n    style: {\n      gridColumn: gridColumn\n    },\n    onClick: handleClick,\n    children: day\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = DaysCalendar;\nexport default DaysCalendar;\nvar _c;\n$RefreshReg$(_c, \"DaysCalendar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DaysCalendar","day","colombianHolidays","monthCalendario","yearSet","onDayClick","isHoliday","some","holiday","month","date","Date","dayOfWeek","getDay","handleClick","dayClass","gridColumn","className","style","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/calendario/src/components/DaysCalendar.js"],"sourcesContent":["\nimport React from 'react';\nimport '../css/calendario.css';\n\nconst DaysCalendar = ({ day, colombianHolidays, monthCalendario, yearSet, onDayClick }) => {\n\n  const isHoliday = colombianHolidays.some(holiday => holiday.day === day && holiday.month === monthCalendario + 1);\n  const date = new Date(yearSet, monthCalendario, day);\n  const dayOfWeek = date.getDay(); \n\n  const handleClick = () => {\n    if (onDayClick) { \n      onDayClick(day, monthCalendario, yearSet);\n    }\n  };\n\n  const dayClass = isHoliday ? 'holiday' : '';\n  const gridColumn = day === 1 ? dayOfWeek + 1 : 'auto'; \n\n  return (\n    <li\n      className={`day ${dayClass}`}\n      style={{ gridColumn: gridColumn }}\n      onClick={handleClick} \n    >\n      {day}\n    </li>\n  );\n};\n\nexport default DaysCalendar;\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,GAAG;EAAEC,iBAAiB;EAAEC,eAAe;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAEzF,MAAMC,SAAS,GAAGJ,iBAAiB,CAACK,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACP,GAAG,KAAKA,GAAG,IAAIO,OAAO,CAACC,KAAK,KAAKN,eAAe,GAAG,CAAC,CAAC;EACjH,MAAMO,IAAI,GAAG,IAAIC,IAAI,CAACP,OAAO,EAAED,eAAe,EAAEF,GAAG,CAAC;EACpD,MAAMW,SAAS,GAAGF,IAAI,CAACG,MAAM,CAAC,CAAC;EAE/B,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIT,UAAU,EAAE;MACdA,UAAU,CAACJ,GAAG,EAAEE,eAAe,EAAEC,OAAO,CAAC;IAC3C;EACF,CAAC;EAED,MAAMW,QAAQ,GAAGT,SAAS,GAAG,SAAS,GAAG,EAAE;EAC3C,MAAMU,UAAU,GAAGf,GAAG,KAAK,CAAC,GAAGW,SAAS,GAAG,CAAC,GAAG,MAAM;EAErD,oBACEb,OAAA;IACEkB,SAAS,EAAE,OAAOF,QAAQ,EAAG;IAC7BG,KAAK,EAAE;MAAEF,UAAU,EAAEA;IAAW,CAAE;IAClCG,OAAO,EAAEL,WAAY;IAAAM,QAAA,EAEpBnB;EAAG;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAET,CAAC;AAACC,EAAA,GAxBIzB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}