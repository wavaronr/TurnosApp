{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/components/DayOffcanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/DayOffcanvas.css';\nimport AssignPersonModal from './AssignPersonModal';\nimport { persons } from './personsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShiftCard = ({\n  title,\n  people,\n  onAdd,\n  onRemove\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"shift-card\",\n  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n    className: \"shift-title\",\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"people-list\",\n    children: people.map(person => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"person-pill\",\n      children: [person.name, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onRemove(person.id),\n        className: \"remove-person-btn\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)]\n    }, person.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onAdd,\n    className: \"add-person-btn\",\n    children: \"+ Asignar Persona\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n_c = ShiftCard;\nfunction DayOffcanvas({\n  day,\n  month,\n  year,\n  onClose,\n  shifts,\n  onUpdateShifts\n}) {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentShift, setCurrentShift] = useState(null);\n  const handleAdd = shift => {\n    setCurrentShift(shift);\n    setIsModalOpen(true);\n  };\n  const handleRemove = (personId, shift) => {\n    const updatedShift = shifts[shift].filter(p => p.id !== personId);\n    onUpdateShifts({\n      ...shifts,\n      [shift]: updatedShift\n    });\n  };\n  const handleSelectPerson = person => {\n    if (currentShift) {\n      const updatedShift = [...shifts[currentShift], person];\n      onUpdateShifts({\n        ...shifts,\n        [currentShift]: updatedShift\n      });\n    }\n    setIsModalOpen(false);\n    setCurrentShift(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"offcanvas-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"offcanvas-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offcanvas-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: `Horarios para el ${day}/${month + 1}/${year}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-btn\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offcanvas-body\",\n        children: [/*#__PURE__*/_jsxDEV(ShiftCard, {\n          title: \"Ma\\xF1ana\",\n          people: shifts.morning,\n          onAdd: () => handleAdd('morning'),\n          onRemove: personId => handleRemove(personId, 'morning')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShiftCard, {\n          title: \"Tarde\",\n          people: shifts.afternoon,\n          onAdd: () => handleAdd('afternoon'),\n          onRemove: personId => handleRemove(personId, 'afternoon')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShiftCard, {\n          title: \"Noche\",\n          people: shifts.night,\n          onAdd: () => handleAdd('night'),\n          onRemove: personId => handleRemove(personId, 'night')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShiftCard, {\n          title: \"Descanso\",\n          people: shifts.off,\n          onAdd: () => handleAdd('off'),\n          onRemove: personId => handleRemove(personId, 'off')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(AssignPersonModal, {\n        people: persons,\n        existingPeopleIds: currentShift ? shifts[currentShift].map(p => p.id) : [],\n        onSelect: handleSelectPerson,\n        onClose: () => setIsModalOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(DayOffcanvas, \"SVJcCEJ8ztFsc51DxqNGJbUw91s=\");\n_c2 = DayOffcanvas;\nexport default DayOffcanvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"ShiftCard\");\n$RefreshReg$(_c2, \"DayOffcanvas\");","map":{"version":3,"names":["React","useState","AssignPersonModal","persons","jsxDEV","_jsxDEV","ShiftCard","title","people","onAdd","onRemove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","person","name","onClick","id","_c","DayOffcanvas","day","month","year","onClose","shifts","onUpdateShifts","_s","isModalOpen","setIsModalOpen","currentShift","setCurrentShift","handleAdd","shift","handleRemove","personId","updatedShift","filter","p","handleSelectPerson","e","stopPropagation","morning","afternoon","night","off","existingPeopleIds","onSelect","_c2","$RefreshReg$"],"sources":["/home/user/calendario/src/components/DayOffcanvas.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport '../css/DayOffcanvas.css';\nimport AssignPersonModal from './AssignPersonModal';\nimport { persons } from './personsData';\n\nconst ShiftCard = ({ title, people, onAdd, onRemove }) => (\n  <div className=\"shift-card\">\n    <h4 className=\"shift-title\">{title}</h4>\n    <div className=\"people-list\">\n      {people.map(person => (\n        <span key={person.id} className=\"person-pill\">\n          {person.name}\n          <button onClick={() => onRemove(person.id)} className=\"remove-person-btn\">×</button>\n        </span>\n      ))}\n    </div>\n    <button onClick={onAdd} className=\"add-person-btn\">+ Asignar Persona</button>\n  </div>\n);\n\nfunction DayOffcanvas({ day, month, year, onClose, shifts, onUpdateShifts }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentShift, setCurrentShift] = useState(null);\n\n  const handleAdd = (shift) => {\n    setCurrentShift(shift);\n    setIsModalOpen(true);\n  };\n\n  const handleRemove = (personId, shift) => {\n    const updatedShift = shifts[shift].filter(p => p.id !== personId);\n    onUpdateShifts({ ...shifts, [shift]: updatedShift });\n  };\n\n  const handleSelectPerson = (person) => {\n    if (currentShift) {\n      const updatedShift = [...shifts[currentShift], person];\n      onUpdateShifts({ ...shifts, [currentShift]: updatedShift });\n    }\n    setIsModalOpen(false);\n    setCurrentShift(null);\n  };\n\n  return (\n    <div className=\"offcanvas-overlay\" onClick={onClose}>\n      <div className=\"offcanvas-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"offcanvas-header\">\n          <h2>{`Horarios para el ${day}/${month + 1}/${year}`}</h2>\n          <button onClick={onClose} className=\"close-btn\">×</button>\n        </div>\n        <div className=\"offcanvas-body\">\n          <ShiftCard \n            title=\"Mañana\" \n            people={shifts.morning}\n            onAdd={() => handleAdd('morning')}\n            onRemove={(personId) => handleRemove(personId, 'morning')}\n          />\n          <ShiftCard \n            title=\"Tarde\" \n            people={shifts.afternoon}\n            onAdd={() => handleAdd('afternoon')}\n            onRemove={(personId) => handleRemove(personId, 'afternoon')}\n          />\n          <ShiftCard \n            title=\"Noche\" \n            people={shifts.night}\n            onAdd={() => handleAdd('night')}\n            onRemove={(personId) => handleRemove(personId, 'night')}\n          />\n          <ShiftCard \n            title=\"Descanso\" \n            people={shifts.off}\n            onAdd={() => handleAdd('off')}\n            onRemove={(personId) => handleRemove(personId, 'off')}\n          />\n        </div>\n\n        {isModalOpen && (\n          <AssignPersonModal\n            people={persons}\n            existingPeopleIds={currentShift ? shifts[currentShift].map(p => p.id) : []}\n            onSelect={handleSelectPerson}\n            onClose={() => setIsModalOpen(false)}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default DayOffcanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}