{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/components/calendar/CalendarGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport DayCell from './DayCell';\n\n/**\n * CalendarGrid Component\n * The core component for displaying the grid of days.\n * It calculates the layout and renders DayCells.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarGrid = ({\n  year,\n  month,\n  holidays,\n  shifts,\n  onPersonClick\n}) => {\n  _s();\n  const isHoliday = day => holidays === null || holidays === void 0 ? void 0 : holidays.some(h => h.dia === day && h.mes === month + 1);\n  const getShiftsForDay = day => (shifts === null || shifts === void 0 ? void 0 : shifts[`${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`]) || null;\n  const calendarGrid = useMemo(() => {\n    const firstDayOfMonth = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    // Create an array with nulls for empty spaces and numbers for days.\n    return [...Array(firstDayOfMonth).fill(null), ...Array.from({\n      length: daysInMonth\n    }, (_, i) => i + 1)];\n  }, [year, month]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-pro-grid\",\n    children: calendarGrid.map((day, index) => {\n      // Render an empty div for the placeholder days.\n      if (!day) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-cell-pro empty\"\n        }, `empty-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 18\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(DayCell, {\n        day: day,\n        shiftsForDay: getShiftsForDay(day),\n        isHoliday: isHoliday(day),\n        onPersonClick: onPersonClick\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarGrid, \"To1xtQGQ/z2NvzBOiMhy29/la3Y=\");\n_c = CalendarGrid;\nCalendarGrid.propTypes = {\n  year: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  holidays: PropTypes.array.isRequired,\n  shifts: PropTypes.object.isRequired,\n  onPersonClick: PropTypes.func\n};\nCalendarGrid.defaultProps = {\n  onPersonClick: () => {}\n};\nexport default CalendarGrid;\nvar _c;\n$RefreshReg$(_c, \"CalendarGrid\");","map":{"version":3,"names":["React","useMemo","PropTypes","DayCell","jsxDEV","_jsxDEV","CalendarGrid","year","month","holidays","shifts","onPersonClick","_s","isHoliday","day","some","h","dia","mes","getShiftsForDay","String","padStart","calendarGrid","firstDayOfMonth","Date","getDay","daysInMonth","getDate","Array","fill","from","length","_","i","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","shiftsForDay","_c","propTypes","number","isRequired","array","object","func","defaultProps","$RefreshReg$"],"sources":["/home/user/calendario/src/components/calendar/CalendarGrid.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport DayCell from './DayCell';\n\n/**\n * CalendarGrid Component\n * The core component for displaying the grid of days.\n * It calculates the layout and renders DayCells.\n */\nconst CalendarGrid = ({ year, month, holidays, shifts, onPersonClick }) => {\n\n  const isHoliday = (day) => \n    holidays?.some(h => h.dia === day && h.mes === month + 1);\n\n  const getShiftsForDay = (day) => \n    shifts?.[`${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`] || null;\n\n  const calendarGrid = useMemo(() => {\n    const firstDayOfMonth = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    // Create an array with nulls for empty spaces and numbers for days.\n    return [...Array(firstDayOfMonth).fill(null), ...Array.from({ length: daysInMonth }, (_, i) => i + 1)];\n  }, [year, month]);\n\n  return (\n    <div className=\"calendar-pro-grid\">\n      {calendarGrid.map((day, index) => {\n        // Render an empty div for the placeholder days.\n        if (!day) {\n          return <div className=\"day-cell-pro empty\" key={`empty-${index}`}></div>;\n        }\n        \n        return (\n          <DayCell \n            key={day}\n            day={day} \n            shiftsForDay={getShiftsForDay(day)} \n            isHoliday={isHoliday(day)}\n            onPersonClick={onPersonClick}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nCalendarGrid.propTypes = {\n  year: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  holidays: PropTypes.array.isRequired,\n  shifts: PropTypes.object.isRequired,\n  onPersonClick: PropTypes.func,\n};\n\nCalendarGrid.defaultProps = {\n  onPersonClick: () => {},\n};\n\nexport default CalendarGrid;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,OAAO,MAAM,WAAW;;AAE/B;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAEzE,MAAMC,SAAS,GAAIC,GAAG,IACpBL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKH,GAAG,IAAIE,CAAC,CAACE,GAAG,KAAKV,KAAK,GAAG,CAAC,CAAC;EAE3D,MAAMW,eAAe,GAAIL,GAAG,IAC1B,CAAAJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAG,GAAGH,IAAI,IAAIa,MAAM,CAACZ,KAAK,GAAG,CAAC,CAAC,CAACa,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACN,GAAG,CAAC,CAACO,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,KAAI,IAAI;EAEnG,MAAMC,YAAY,GAAGrB,OAAO,CAAC,MAAM;IACjC,MAAMsB,eAAe,GAAG,IAAIC,IAAI,CAACjB,IAAI,EAAEC,KAAK,EAAE,CAAC,CAAC,CAACiB,MAAM,CAAC,CAAC;IACzD,MAAMC,WAAW,GAAG,IAAIF,IAAI,CAACjB,IAAI,EAAEC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACmB,OAAO,CAAC,CAAC;IAC1D;IACA,OAAO,CAAC,GAAGC,KAAK,CAACL,eAAe,CAAC,CAACM,IAAI,CAAC,IAAI,CAAC,EAAE,GAAGD,KAAK,CAACE,IAAI,CAAC;MAAEC,MAAM,EAAEL;IAAY,CAAC,EAAE,CAACM,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAAC;EACxG,CAAC,EAAE,CAAC1B,IAAI,EAAEC,KAAK,CAAC,CAAC;EAEjB,oBACEH,OAAA;IAAK6B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC/Bb,YAAY,CAACc,GAAG,CAAC,CAACtB,GAAG,EAAEuB,KAAK,KAAK;MAChC;MACA,IAAI,CAACvB,GAAG,EAAE;QACR,oBAAOT,OAAA;UAAK6B,SAAS,EAAC;QAAoB,GAAM,SAASG,KAAK,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAC1E;MAEA,oBACEpC,OAAA,CAACF,OAAO;QAENW,GAAG,EAAEA,GAAI;QACT4B,YAAY,EAAEvB,eAAe,CAACL,GAAG,CAAE;QACnCD,SAAS,EAAEA,SAAS,CAACC,GAAG,CAAE;QAC1BH,aAAa,EAAEA;MAAc,GAJxBG,GAAG;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CAAC;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAnCIN,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AAqClBA,YAAY,CAACsC,SAAS,GAAG;EACvBrC,IAAI,EAAEL,SAAS,CAAC2C,MAAM,CAACC,UAAU;EACjCtC,KAAK,EAAEN,SAAS,CAAC2C,MAAM,CAACC,UAAU;EAClCrC,QAAQ,EAAEP,SAAS,CAAC6C,KAAK,CAACD,UAAU;EACpCpC,MAAM,EAAER,SAAS,CAAC8C,MAAM,CAACF,UAAU;EACnCnC,aAAa,EAAET,SAAS,CAAC+C;AAC3B,CAAC;AAED3C,YAAY,CAAC4C,YAAY,GAAG;EAC1BvC,aAAa,EAAEA,CAAA,KAAM,CAAC;AACxB,CAAC;AAED,eAAeL,YAAY;AAAC,IAAAqC,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}