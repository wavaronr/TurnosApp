{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/components/AssignPersonModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/AssignPersonModal.css';\n\n// El modal ahora recibe una lista de personas ya validadas.\n// Se elimina la prop `existingPeopleIds`.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssignPersonModal({\n  people,\n  onSelect,\n  onClose\n}) {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // La única lógica de filtrado que queda es la del buscador.\n  const filteredPeople = people.filter(person => person.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Asignar Persona\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-btn\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Buscar persona...\",\n          className: \"search-input\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"people-list-container\",\n          children: filteredPeople.length > 0 ? filteredPeople.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => onSelect(person),\n            className: \"person-item\",\n            children: person.name\n          }, person.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-results\",\n            children: \"No hay personas disponibles o que coincidan con la b\\xFAsqueda.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(AssignPersonModal, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = AssignPersonModal;\nexport default AssignPersonModal;\nvar _c;\n$RefreshReg$(_c, \"AssignPersonModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AssignPersonModal","people","onSelect","onClose","_s","searchTerm","setSearchTerm","filteredPeople","filter","person","name","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","length","map","id","_c","$RefreshReg$"],"sources":["/home/user/calendario/src/components/AssignPersonModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../css/AssignPersonModal.css';\n\n// El modal ahora recibe una lista de personas ya validadas.\n// Se elimina la prop `existingPeopleIds`.\nfunction AssignPersonModal({ people, onSelect, onClose }) {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // La única lógica de filtrado que queda es la del buscador.\n  const filteredPeople = people.filter(person =>\n    person.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5>Asignar Persona</h5>\n          <button onClick={onClose} className=\"close-btn\">×</button>\n        </div>\n        <div className=\"modal-body\">\n          <input\n            type=\"text\"\n            placeholder=\"Buscar persona...\"\n            className=\"search-input\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n          <div className=\"people-list-container\">\n            {/* Se muestra un mensaje si no hay personas válidas o no hay resultados de búsqueda */}\n            {filteredPeople.length > 0 ? (\n              filteredPeople.map(person => (\n                <div key={person.id} onClick={() => onSelect(person)} className=\"person-item\">\n                  {person.name}\n                </div>\n              ))\n            ) : (\n              <div className=\"no-results\">No hay personas disponibles o que coincidan con la búsqueda.</div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AssignPersonModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,8BAA8B;;AAErC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,iBAAiBA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMU,cAAc,GAAGN,MAAM,CAACO,MAAM,CAACC,MAAM,IACzCA,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,CAAC,CAAC,CAC7D,CAAC;EAED,oBACEZ,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5Bf,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5Bf,OAAA;QAAKc,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3Bf,OAAA;UAAAe,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBnB,OAAA;UAAQoB,OAAO,EAAEhB,OAAQ;UAACU,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eACNnB,OAAA;QAAKc,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBf,OAAA;UACEqB,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,mBAAmB;UAC/BR,SAAS,EAAC,cAAc;UACxBS,KAAK,EAAEjB,UAAW;UAClBkB,QAAQ,EAAGC,CAAC,IAAKlB,aAAa,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACFnB,OAAA;UAAKc,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAEnCP,cAAc,CAACmB,MAAM,GAAG,CAAC,GACxBnB,cAAc,CAACoB,GAAG,CAAClB,MAAM,iBACvBV,OAAA;YAAqBoB,OAAO,EAAEA,CAAA,KAAMjB,QAAQ,CAACO,MAAM,CAAE;YAACI,SAAS,EAAC,aAAa;YAAAC,QAAA,EAC1EL,MAAM,CAACC;UAAI,GADJD,MAAM,CAACmB,EAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CACN,CAAC,gBAEFnB,OAAA;YAAKc,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAA4D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAC9F;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CAvCQJ,iBAAiB;AAAA6B,EAAA,GAAjB7B,iBAAiB;AAyC1B,eAAeA,iBAAiB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}