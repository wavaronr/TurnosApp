{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/components/WeekDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport DayList from './DayList.js';\nimport useCalendarStore from '../store/calendarStore';\nimport { ProfileContext } from '../context/ProfileContext.js';\nimport '../css/WeekDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeekDetail() {\n  _s();\n  // Corrected: Use a selector to subscribe only to the 'people' state.\n  // This prevents re-renders when other parts of the store change.\n  const people = useCalendarStore(state => state.people);\n  const {\n    profile\n  } = useContext(ProfileContext);\n\n  // The concepts of 'selectedWeek', 'isDirty', and 'saveTemporarySchedule' are deprecated.\n  // The new calendar view handles its state directly, and the store autosaves.\n  // The DayList component is also deprecated.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DayList, {\n      people: people\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(WeekDetail, \"bZkljgBUQR+RJWy+ibycvEFsokQ=\", false, function () {\n  return [useCalendarStore];\n});\n_c = WeekDetail;\nexport default WeekDetail;\nvar _c;\n$RefreshReg$(_c, \"WeekDetail\");","map":{"version":3,"names":["React","useContext","DayList","useCalendarStore","ProfileContext","jsxDEV","_jsxDEV","WeekDetail","_s","people","state","profile","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/calendario/src/components/WeekDetail.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport DayList from './DayList.js';\nimport useCalendarStore from '../store/calendarStore';\nimport { ProfileContext } from '../context/ProfileContext.js';\nimport '../css/WeekDetail.css';\n\nfunction WeekDetail() { \n  // Corrected: Use a selector to subscribe only to the 'people' state.\n  // This prevents re-renders when other parts of the store change.\n  const people = useCalendarStore(state => state.people); \n  const { profile } = useContext(ProfileContext);\n\n  // The concepts of 'selectedWeek', 'isDirty', and 'saveTemporarySchedule' are deprecated.\n  // The new calendar view handles its state directly, and the store autosaves.\n  // The DayList component is also deprecated.\n\n  return (\n    <div>\n      {/* \n        The save button is no longer needed as changes are saved automatically.\n        The DayList component is deprecated and will render null.\n      */}\n      <DayList people={people} />\n    </div>\n  );\n}\n\nexport default WeekDetail;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,gBAAgB,MAAM,wBAAwB;AACrD,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB;EACA;EACA,MAAMC,MAAM,GAAGN,gBAAgB,CAACO,KAAK,IAAIA,KAAK,CAACD,MAAM,CAAC;EACtD,MAAM;IAAEE;EAAQ,CAAC,GAAGV,UAAU,CAACG,cAAc,CAAC;;EAE9C;EACA;EACA;;EAEA,oBACEE,OAAA;IAAAM,QAAA,eAKEN,OAAA,CAACJ,OAAO;MAACO,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV;AAACR,EAAA,CAnBQD,UAAU;EAAA,QAGFJ,gBAAgB;AAAA;AAAAc,EAAA,GAHxBV,UAAU;AAqBnB,eAAeA,UAAU;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}