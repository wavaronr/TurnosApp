{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/components/DayCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport '../css/WeekDetail.css';\nimport AssignPersonModal from './AssignPersonModal.js';\nimport useCalendarStore from '../store/calendarStore'; // Import the new Zustand store\nimport { ProfileContext } from '../context/ProfileContext.js';\n\n// ShiftSection remains the same as it's a presentational component.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShiftSection = ({\n  title,\n  people,\n  onAdd,\n  onRemove,\n  profile\n}) => {\n  const finalShortNames = people.reduce((acc, person) => {\n    if (!person.name) {\n      acc[person.id] = '';\n      return acc;\n    }\n    const nameParts = person.name.toLowerCase().split(' ').filter(Boolean);\n    if (nameParts.length === 0) {\n      acc[person.id] = '';\n      return acc;\n    }\n    const firstName = nameParts[0];\n    const lastName = nameParts.length > 1 ? nameParts[nameParts.length - 1] : '';\n    let shortName = `${firstName.charAt(0)}${lastName ? '.' + lastName : ''}`;\n    let prefixLength = 1;\n    while (Object.values(acc).includes(shortName) && firstName.length > prefixLength) {\n      prefixLength++;\n      shortName = `${firstName.substring(0, prefixLength)}${lastName ? '.' + lastName : ''}`;\n    }\n    if (Object.values(acc).includes(shortName)) {\n      let count = 2;\n      let newShortName = `${shortName}${count}`;\n      while (Object.values(acc).includes(newShortName)) {\n        count++;\n        newShortName = `${shortName}${count}`;\n      }\n      shortName = newShortName;\n    }\n    acc[person.id] = shortName;\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shift-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"shift-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"people-list\",\n      children: people.map(person => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"person-pill\",\n        title: person.name,\n        children: [finalShortNames[person.id], (profile === null || profile === void 0 ? void 0 : profile.role) === 'ADM' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onRemove(person.id),\n          className: \"remove-person-btn\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 41\n        }, this)]\n      }, person.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), (profile === null || profile === void 0 ? void 0 : profile.role) === 'ADM' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAdd,\n      className: \"add-person-btn\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = ShiftSection;\nfunction DayCard({\n  day,\n  weekDays\n}) {\n  _s();\n  // removed `people` prop as it's now from global state\n  // 1. Get state and actions from the Zustand store\n  const {\n    holidays,\n    schedule,\n    people,\n    assignShift,\n    removeShift\n  } = useCalendarStore();\n  const {\n    profile\n  } = useContext(ProfileContext);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedShift, setSelectedShift] = useState(null);\n  const [validPeople, setValidPeople] = useState([]);\n\n  // Helper to format Date object to 'YYYY-MM-DD' string\n  const getDayString = d => d.toISOString().split('T')[0];\n  const dayString = getDayString(day);\n  const dayShifts = schedule[dayString] || {\n    morning: [],\n    afternoon: [],\n    night: [],\n    off: []\n  };\n  const dayOfMonth = day.getDate();\n  const month = day.getMonth() + 1;\n  const isHoliday = holidays.some(h => h.dia === dayOfMonth && h.mes === month);\n  const dayName = day.toLocaleDateString('es-ES', {\n    weekday: 'short'\n  });\n  const cardStyle = {\n    ...(isHoliday && {\n      backgroundColor: '#fdd'\n    }),\n    listStyle: 'none'\n  };\n  const dayNumberStyle = {\n    ...(isHoliday && {\n      color: 'red',\n      fontWeight: 'bold'\n    })\n  };\n\n  // 2. Re-implement getValidPeopleForShift logic inside the component\n  const getValidPeopleForShift = dateForValidation => {\n    const dateStr = getDayString(dateForValidation);\n    const shiftsOnDay = schedule[dateStr];\n    if (!shiftsOnDay) return people; // If no one is working, everyone is available\n\n    const assignedPeopleIds = new Set(Object.values(shiftsOnDay).flat().map(p => p.id));\n    return people.filter(p => !assignedPeopleIds.has(p.id));\n  };\n  const shiftTypes = [{\n    id: 'morning',\n    title: 'MaÃ±ana'\n  }, {\n    id: 'afternoon',\n    title: 'Tarde'\n  }, {\n    id: 'night',\n    title: 'Noche'\n  }, {\n    id: 'off',\n    title: 'Libre'\n  }];\n  const handleAddPerson = shiftType => {\n    const validPeopleForShift = getValidPeopleForShift(day);\n    setValidPeople(validPeopleForShift);\n    setSelectedShift(shiftType);\n    setIsModalOpen(true);\n  };\n\n  // 3. Adapt handleAssignToDays to loop and call the new store action\n  const handleAssignToDays = (person, selectedDays) => {\n    selectedDays.forEach(d => {\n      const dateString = getDayString(d);\n      // Use the new assignShift from the store\n      assignShift(dateString, selectedShift, person.id);\n    });\n    setIsModalOpen(false);\n  };\n\n  // 4. Adapt handleRemovePerson to the new store action\n  const handleRemovePerson = (shiftType, personId) => {\n    removeShift(dayString, shiftType, personId);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-card\",\n    style: cardStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-name\",\n        children: dayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-number\",\n        style: dayNumberStyle,\n        children: dayOfMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shifts-container\",\n      children: shiftTypes.map(shift => /*#__PURE__*/_jsxDEV(ShiftSection, {\n        title: shift.title,\n        people: dayShifts[shift.id],\n        onAdd: () => handleAddPerson(shift.id),\n        onRemove: personId => handleRemovePerson(shift.id, personId),\n        profile: profile\n      }, shift.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(AssignPersonModal, {\n      people: validPeople,\n      onAssign: handleAssignToDays,\n      onClose: handleCloseModal,\n      initialDay: day,\n      weekDays: weekDays,\n      shiftType: selectedShift\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(DayCard, \"DuOosUdUY9Xk6G7ApLaxl7T0ppg=\", false, function () {\n  return [useCalendarStore];\n});\n_c2 = DayCard;\nexport default DayCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"ShiftSection\");\n$RefreshReg$(_c2, \"DayCard\");","map":{"version":3,"names":["React","useState","useContext","AssignPersonModal","useCalendarStore","ProfileContext","jsxDEV","_jsxDEV","ShiftSection","title","people","onAdd","onRemove","profile","finalShortNames","reduce","acc","person","name","id","nameParts","toLowerCase","split","filter","Boolean","length","firstName","lastName","shortName","charAt","prefixLength","Object","values","includes","substring","count","newShortName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","role","onClick","_c","DayCard","day","weekDays","_s","holidays","schedule","assignShift","removeShift","isModalOpen","setIsModalOpen","selectedShift","setSelectedShift","validPeople","setValidPeople","getDayString","d","toISOString","dayString","dayShifts","morning","afternoon","night","off","dayOfMonth","getDate","month","getMonth","isHoliday","some","h","dia","mes","dayName","toLocaleDateString","weekday","cardStyle","backgroundColor","listStyle","dayNumberStyle","color","fontWeight","getValidPeopleForShift","dateForValidation","dateStr","shiftsOnDay","assignedPeopleIds","Set","flat","p","has","shiftTypes","handleAddPerson","shiftType","validPeopleForShift","handleAssignToDays","selectedDays","forEach","dateString","handleRemovePerson","personId","handleCloseModal","style","shift","onAssign","onClose","initialDay","_c2","$RefreshReg$"],"sources":["/home/user/calendario/src/components/DayCard.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport '../css/WeekDetail.css';\nimport AssignPersonModal from './AssignPersonModal.js';\nimport useCalendarStore from '../store/calendarStore'; // Import the new Zustand store\nimport { ProfileContext } from '../context/ProfileContext.js';\n\n// ShiftSection remains the same as it's a presentational component.\nconst ShiftSection = ({ title, people, onAdd, onRemove, profile }) => {\n  const finalShortNames = people.reduce((acc, person) => {\n    if (!person.name) {\n      acc[person.id] = '';\n      return acc;\n    }\n    const nameParts = person.name.toLowerCase().split(' ').filter(Boolean);\n    if (nameParts.length === 0) {\n      acc[person.id] = '';\n      return acc;\n    }\n    const firstName = nameParts[0];\n    const lastName = nameParts.length > 1 ? nameParts[nameParts.length - 1] : '';\n    let shortName = `${firstName.charAt(0)}${lastName ? '.' + lastName : ''}`;\n    let prefixLength = 1;\n    while (Object.values(acc).includes(shortName) && firstName.length > prefixLength) {\n      prefixLength++;\n      shortName = `${firstName.substring(0, prefixLength)}${lastName ? '.' + lastName : ''}`;\n    }\n    if (Object.values(acc).includes(shortName)) {\n        let count = 2;\n        let newShortName = `${shortName}${count}`;\n        while(Object.values(acc).includes(newShortName)){\n            count++;\n            newShortName = `${shortName}${count}`;\n        }\n        shortName = newShortName;\n    }\n    acc[person.id] = shortName;\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"shift-section\">\n      <h6 className=\"shift-title\">{title}</h6>\n      <div className=\"people-list\">\n        {people.map(person => (\n          <span key={person.id} className=\"person-pill\" title={person.name}>\n            {finalShortNames[person.id]}\n            {profile?.role === 'ADM' && <button onClick={() => onRemove(person.id)} className=\"remove-person-btn\">X</button>}\n          </span>\n        ))}\n      </div>\n      {profile?.role === 'ADM' && <button onClick={onAdd} className=\"add-person-btn\">+</button>}\n    </div>\n  );\n};\n\nfunction DayCard({ day, weekDays }) { // removed `people` prop as it's now from global state\n  // 1. Get state and actions from the Zustand store\n  const {\n    holidays,\n    schedule,\n    people,\n    assignShift,\n    removeShift,\n  } = useCalendarStore();\n  const { profile } = useContext(ProfileContext);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedShift, setSelectedShift] = useState(null);\n  const [validPeople, setValidPeople] = useState([]);\n\n  // Helper to format Date object to 'YYYY-MM-DD' string\n  const getDayString = (d) => d.toISOString().split('T')[0];\n\n  const dayString = getDayString(day);\n  const dayShifts = schedule[dayString] || { morning: [], afternoon: [], night: [], off: [] };\n\n  const dayOfMonth = day.getDate();\n  const month = day.getMonth() + 1;\n  const isHoliday = holidays.some(h => h.dia === dayOfMonth && h.mes === month);\n  const dayName = day.toLocaleDateString('es-ES', { weekday: 'short' });\n\n  const cardStyle = { ...(isHoliday && { backgroundColor: '#fdd' }), listStyle: 'none' };\n  const dayNumberStyle = { ...(isHoliday && { color: 'red', fontWeight: 'bold' }) };\n\n  // 2. Re-implement getValidPeopleForShift logic inside the component\n  const getValidPeopleForShift = (dateForValidation) => {\n    const dateStr = getDayString(dateForValidation);\n    const shiftsOnDay = schedule[dateStr];\n    if (!shiftsOnDay) return people; // If no one is working, everyone is available\n\n    const assignedPeopleIds = new Set(Object.values(shiftsOnDay).flat().map(p => p.id));\n    return people.filter(p => !assignedPeopleIds.has(p.id));\n  };\n\n  const shiftTypes = [\n    { id: 'morning', title: 'MaÃ±ana' },\n    { id: 'afternoon', title: 'Tarde' },\n    { id: 'night', title: 'Noche' },\n    { id: 'off', title: 'Libre' },\n  ];\n\n  const handleAddPerson = (shiftType) => {\n    const validPeopleForShift = getValidPeopleForShift(day);\n    setValidPeople(validPeopleForShift);\n    setSelectedShift(shiftType);\n    setIsModalOpen(true);\n  };\n\n  // 3. Adapt handleAssignToDays to loop and call the new store action\n  const handleAssignToDays = (person, selectedDays) => {\n    selectedDays.forEach(d => {\n      const dateString = getDayString(d);\n      // Use the new assignShift from the store\n      assignShift(dateString, selectedShift, person.id);\n    });\n    setIsModalOpen(false);\n  };\n  \n  // 4. Adapt handleRemovePerson to the new store action\n  const handleRemovePerson = (shiftType, personId) => {\n    removeShift(dayString, shiftType, personId);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div className=\"day-card\" style={cardStyle}>\n      <div className=\"day-header\">\n        <div className=\"day-name\">{dayName}</div>\n        <div className=\"day-number\" style={dayNumberStyle}>{dayOfMonth}</div>\n      </div>\n      <div className=\"shifts-container\">\n        {shiftTypes.map((shift) => (\n          <ShiftSection\n            key={shift.id}\n            title={shift.title}\n            people={dayShifts[shift.id]}\n            onAdd={() => handleAddPerson(shift.id)}\n            onRemove={(personId) => handleRemovePerson(shift.id, personId)}\n            profile={profile}\n          />\n        ))}\n      </div>\n\n      {isModalOpen && (\n        <AssignPersonModal\n          people={validPeople}\n          onAssign={handleAssignToDays}\n          onClose={handleCloseModal}\n          initialDay={day}\n          weekDays={weekDays}\n          shiftType={selectedShift}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default DayCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAO,uBAAuB;AAC9B,OAAOC,iBAAiB,MAAM,wBAAwB;AACtD,OAAOC,gBAAgB,MAAM,wBAAwB,CAAC,CAAC;AACvD,SAASC,cAAc,QAAQ,8BAA8B;;AAE7D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC,MAAM;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EACpE,MAAMC,eAAe,GAAGJ,MAAM,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;IACrD,IAAI,CAACA,MAAM,CAACC,IAAI,EAAE;MAChBF,GAAG,CAACC,MAAM,CAACE,EAAE,CAAC,GAAG,EAAE;MACnB,OAAOH,GAAG;IACZ;IACA,MAAMI,SAAS,GAAGH,MAAM,CAACC,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;IACtE,IAAIJ,SAAS,CAACK,MAAM,KAAK,CAAC,EAAE;MAC1BT,GAAG,CAACC,MAAM,CAACE,EAAE,CAAC,GAAG,EAAE;MACnB,OAAOH,GAAG;IACZ;IACA,MAAMU,SAAS,GAAGN,SAAS,CAAC,CAAC,CAAC;IAC9B,MAAMO,QAAQ,GAAGP,SAAS,CAACK,MAAM,GAAG,CAAC,GAAGL,SAAS,CAACA,SAAS,CAACK,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IAC5E,IAAIG,SAAS,GAAG,GAAGF,SAAS,CAACG,MAAM,CAAC,CAAC,CAAC,GAAGF,QAAQ,GAAG,GAAG,GAAGA,QAAQ,GAAG,EAAE,EAAE;IACzE,IAAIG,YAAY,GAAG,CAAC;IACpB,OAAOC,MAAM,CAACC,MAAM,CAAChB,GAAG,CAAC,CAACiB,QAAQ,CAACL,SAAS,CAAC,IAAIF,SAAS,CAACD,MAAM,GAAGK,YAAY,EAAE;MAChFA,YAAY,EAAE;MACdF,SAAS,GAAG,GAAGF,SAAS,CAACQ,SAAS,CAAC,CAAC,EAAEJ,YAAY,CAAC,GAAGH,QAAQ,GAAG,GAAG,GAAGA,QAAQ,GAAG,EAAE,EAAE;IACxF;IACA,IAAII,MAAM,CAACC,MAAM,CAAChB,GAAG,CAAC,CAACiB,QAAQ,CAACL,SAAS,CAAC,EAAE;MACxC,IAAIO,KAAK,GAAG,CAAC;MACb,IAAIC,YAAY,GAAG,GAAGR,SAAS,GAAGO,KAAK,EAAE;MACzC,OAAMJ,MAAM,CAACC,MAAM,CAAChB,GAAG,CAAC,CAACiB,QAAQ,CAACG,YAAY,CAAC,EAAC;QAC5CD,KAAK,EAAE;QACPC,YAAY,GAAG,GAAGR,SAAS,GAAGO,KAAK,EAAE;MACzC;MACAP,SAAS,GAAGQ,YAAY;IAC5B;IACApB,GAAG,CAACC,MAAM,CAACE,EAAE,CAAC,GAAGS,SAAS;IAC1B,OAAOZ,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,oBACET,OAAA;IAAK8B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B/B,OAAA;MAAI8B,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAE7B;IAAK;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxCnC,OAAA;MAAK8B,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzB5B,MAAM,CAACiC,GAAG,CAAC1B,MAAM,iBAChBV,OAAA;QAAsB8B,SAAS,EAAC,aAAa;QAAC5B,KAAK,EAAEQ,MAAM,CAACC,IAAK;QAAAoB,QAAA,GAC9DxB,eAAe,CAACG,MAAM,CAACE,EAAE,CAAC,EAC1B,CAAAN,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE+B,IAAI,MAAK,KAAK,iBAAIrC,OAAA;UAAQsC,OAAO,EAAEA,CAAA,KAAMjC,QAAQ,CAACK,MAAM,CAACE,EAAE,CAAE;UAACkB,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFvGzB,MAAM,CAACE,EAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACL,CAAA7B,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE+B,IAAI,MAAK,KAAK,iBAAIrC,OAAA;MAAQsC,OAAO,EAAElC,KAAM;MAAC0B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEV,CAAC;AAACI,EAAA,GA9CItC,YAAY;AAgDlB,SAASuC,OAAOA,CAAC;EAAEC,GAAG;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAAE;EACpC;EACA,MAAM;IACJC,QAAQ;IACRC,QAAQ;IACR1C,MAAM;IACN2C,WAAW;IACXC;EACF,CAAC,GAAGlD,gBAAgB,CAAC,CAAC;EACtB,MAAM;IAAES;EAAQ,CAAC,GAAGX,UAAU,CAACG,cAAc,CAAC;EAE9C,MAAM,CAACkD,WAAW,EAAEC,cAAc,CAAC,GAAGvD,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwD,aAAa,EAAEC,gBAAgB,CAAC,GAAGzD,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC0D,WAAW,EAAEC,cAAc,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM4D,YAAY,GAAIC,CAAC,IAAKA,CAAC,CAACC,WAAW,CAAC,CAAC,CAACzC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAEzD,MAAM0C,SAAS,GAAGH,YAAY,CAACb,GAAG,CAAC;EACnC,MAAMiB,SAAS,GAAGb,QAAQ,CAACY,SAAS,CAAC,IAAI;IAAEE,OAAO,EAAE,EAAE;IAAEC,SAAS,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAG,CAAC;EAE3F,MAAMC,UAAU,GAAGtB,GAAG,CAACuB,OAAO,CAAC,CAAC;EAChC,MAAMC,KAAK,GAAGxB,GAAG,CAACyB,QAAQ,CAAC,CAAC,GAAG,CAAC;EAChC,MAAMC,SAAS,GAAGvB,QAAQ,CAACwB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKP,UAAU,IAAIM,CAAC,CAACE,GAAG,KAAKN,KAAK,CAAC;EAC7E,MAAMO,OAAO,GAAG/B,GAAG,CAACgC,kBAAkB,CAAC,OAAO,EAAE;IAAEC,OAAO,EAAE;EAAQ,CAAC,CAAC;EAErE,MAAMC,SAAS,GAAG;IAAE,IAAIR,SAAS,IAAI;MAAES,eAAe,EAAE;IAAO,CAAC,CAAC;IAAEC,SAAS,EAAE;EAAO,CAAC;EACtF,MAAMC,cAAc,GAAG;IAAE,IAAIX,SAAS,IAAI;MAAEY,KAAK,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAO,CAAC;EAAE,CAAC;;EAEjF;EACA,MAAMC,sBAAsB,GAAIC,iBAAiB,IAAK;IACpD,MAAMC,OAAO,GAAG7B,YAAY,CAAC4B,iBAAiB,CAAC;IAC/C,MAAME,WAAW,GAAGvC,QAAQ,CAACsC,OAAO,CAAC;IACrC,IAAI,CAACC,WAAW,EAAE,OAAOjF,MAAM,CAAC,CAAC;;IAEjC,MAAMkF,iBAAiB,GAAG,IAAIC,GAAG,CAAC9D,MAAM,CAACC,MAAM,CAAC2D,WAAW,CAAC,CAACG,IAAI,CAAC,CAAC,CAACnD,GAAG,CAACoD,CAAC,IAAIA,CAAC,CAAC5E,EAAE,CAAC,CAAC;IACnF,OAAOT,MAAM,CAACa,MAAM,CAACwE,CAAC,IAAI,CAACH,iBAAiB,CAACI,GAAG,CAACD,CAAC,CAAC5E,EAAE,CAAC,CAAC;EACzD,CAAC;EAED,MAAM8E,UAAU,GAAG,CACjB;IAAE9E,EAAE,EAAE,SAAS;IAAEV,KAAK,EAAE;EAAS,CAAC,EAClC;IAAEU,EAAE,EAAE,WAAW;IAAEV,KAAK,EAAE;EAAQ,CAAC,EACnC;IAAEU,EAAE,EAAE,OAAO;IAAEV,KAAK,EAAE;EAAQ,CAAC,EAC/B;IAAEU,EAAE,EAAE,KAAK;IAAEV,KAAK,EAAE;EAAQ,CAAC,CAC9B;EAED,MAAMyF,eAAe,GAAIC,SAAS,IAAK;IACrC,MAAMC,mBAAmB,GAAGZ,sBAAsB,CAACxC,GAAG,CAAC;IACvDY,cAAc,CAACwC,mBAAmB,CAAC;IACnC1C,gBAAgB,CAACyC,SAAS,CAAC;IAC3B3C,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAM6C,kBAAkB,GAAGA,CAACpF,MAAM,EAAEqF,YAAY,KAAK;IACnDA,YAAY,CAACC,OAAO,CAACzC,CAAC,IAAI;MACxB,MAAM0C,UAAU,GAAG3C,YAAY,CAACC,CAAC,CAAC;MAClC;MACAT,WAAW,CAACmD,UAAU,EAAE/C,aAAa,EAAExC,MAAM,CAACE,EAAE,CAAC;IACnD,CAAC,CAAC;IACFqC,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;;EAED;EACA,MAAMiD,kBAAkB,GAAGA,CAACN,SAAS,EAAEO,QAAQ,KAAK;IAClDpD,WAAW,CAACU,SAAS,EAAEmC,SAAS,EAAEO,QAAQ,CAAC;EAC7C,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BnD,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACEjD,OAAA;IAAK8B,SAAS,EAAC,UAAU;IAACuE,KAAK,EAAE1B,SAAU;IAAA5C,QAAA,gBACzC/B,OAAA;MAAK8B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB/B,OAAA;QAAK8B,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAEyC;MAAO;QAAAxC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzCnC,OAAA;QAAK8B,SAAS,EAAC,YAAY;QAACuE,KAAK,EAAEvB,cAAe;QAAA/C,QAAA,EAAEgC;MAAU;QAAA/B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACNnC,OAAA;MAAK8B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9B2D,UAAU,CAACtD,GAAG,CAAEkE,KAAK,iBACpBtG,OAAA,CAACC,YAAY;QAEXC,KAAK,EAAEoG,KAAK,CAACpG,KAAM;QACnBC,MAAM,EAAEuD,SAAS,CAAC4C,KAAK,CAAC1F,EAAE,CAAE;QAC5BR,KAAK,EAAEA,CAAA,KAAMuF,eAAe,CAACW,KAAK,CAAC1F,EAAE,CAAE;QACvCP,QAAQ,EAAG8F,QAAQ,IAAKD,kBAAkB,CAACI,KAAK,CAAC1F,EAAE,EAAEuF,QAAQ,CAAE;QAC/D7F,OAAO,EAAEA;MAAQ,GALZgG,KAAK,CAAC1F,EAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELa,WAAW,iBACVhD,OAAA,CAACJ,iBAAiB;MAChBO,MAAM,EAAEiD,WAAY;MACpBmD,QAAQ,EAAET,kBAAmB;MAC7BU,OAAO,EAAEJ,gBAAiB;MAC1BK,UAAU,EAAEhE,GAAI;MAChBC,QAAQ,EAAEA,QAAS;MACnBkD,SAAS,EAAE1C;IAAc;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACQ,EAAA,CAvGQH,OAAO;EAAA,QAQV3C,gBAAgB;AAAA;AAAA6G,GAAA,GARblE,OAAO;AAyGhB,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAAmE,GAAA;AAAAC,YAAA,CAAApE,EAAA;AAAAoE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}