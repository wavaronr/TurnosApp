{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/components/ProgrammingCalendar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useCalendarStore from '../store/calendarStore';\nimport ShiftLegend from './calendar/ShiftLegend';\nimport CalendarHeader from './calendar/CalendarHeader';\nimport CalendarGrid from './calendar/CalendarGrid';\nimport '../css/ProgrammingCalendar.css'; // Main stylesheet\n\n/**\n * ProgrammingCalendar Component (Container)\n * \n * This component has been refactored to act as a container. Its main responsibilities are:\n * 1. Subscribing to the global state (Zustand store) to get the necessary data.\n * 2. Handling loading and error states.\n * 3. Orchestrating the rendering of specialized, modular child components.\n *    - ShiftLegend: Displays the color codes for shifts.\n *    - CalendarHeader: Displays the day names (Mon, Tue, etc.).\n *    - CalendarGrid: Manages the main logic of rendering the calendar days.\n * \n * This structure makes the component hierarchy clearer, improves reusability,\n * and simplifies maintenance.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProgrammingCalendar({\n  date\n}) {\n  _s();\n  // 1. Subscribe to global state\n  const {\n    schedule,\n    holidays,\n    isLoading,\n    error\n  } = useCalendarStore(state => ({\n    schedule: state.schedule,\n    holidays: state.holidays,\n    isLoading: state.isLoading,\n    error: state.error\n  }));\n\n  // Extract year and month from the passed date prop\n  const year = date.getFullYear();\n  const month = date.getMonth();\n\n  // --- Event Handlers ---\n  // Centralize event handling to pass down to child components\n  const handlePersonClick = person => {\n    // Here you would typically trigger something, like opening a modal or side panel\n    console.log(\"Person clicked:\", person);\n    // Example: set an active profile in another store\n  };\n\n  // 2. Handle Loading and Error States\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando calendario...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this); // Replace with a proper skeleton loader if desired\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 3. Orchestrate Child Component Rendering\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-pro-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(ShiftLegend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-pro\",\n      children: [/*#__PURE__*/_jsxDEV(CalendarHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalendarGrid, {\n        year: year,\n        month: month,\n        holidays: holidays,\n        shifts: schedule,\n        onPersonClick: handlePersonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ProgrammingCalendar, \"uKNiT3vnnjvISZivaPvbqPVgJGI=\", false, function () {\n  return [useCalendarStore];\n});\n_c = ProgrammingCalendar;\nexport default ProgrammingCalendar;\nvar _c;\n$RefreshReg$(_c, \"ProgrammingCalendar\");","map":{"version":3,"names":["React","useCalendarStore","ShiftLegend","CalendarHeader","CalendarGrid","jsxDEV","_jsxDEV","ProgrammingCalendar","date","_s","schedule","holidays","isLoading","error","state","year","getFullYear","month","getMonth","handlePersonClick","person","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","shifts","onPersonClick","_c","$RefreshReg$"],"sources":["/home/user/calendario/src/components/ProgrammingCalendar.js"],"sourcesContent":["import React from 'react';\nimport useCalendarStore from '../store/calendarStore';\nimport ShiftLegend from './calendar/ShiftLegend';\nimport CalendarHeader from './calendar/CalendarHeader';\nimport CalendarGrid from './calendar/CalendarGrid';\nimport '../css/ProgrammingCalendar.css'; // Main stylesheet\n\n/**\n * ProgrammingCalendar Component (Container)\n * \n * This component has been refactored to act as a container. Its main responsibilities are:\n * 1. Subscribing to the global state (Zustand store) to get the necessary data.\n * 2. Handling loading and error states.\n * 3. Orchestrating the rendering of specialized, modular child components.\n *    - ShiftLegend: Displays the color codes for shifts.\n *    - CalendarHeader: Displays the day names (Mon, Tue, etc.).\n *    - CalendarGrid: Manages the main logic of rendering the calendar days.\n * \n * This structure makes the component hierarchy clearer, improves reusability,\n * and simplifies maintenance.\n */\nfunction ProgrammingCalendar({ date }) {\n  // 1. Subscribe to global state\n  const {\n    schedule,\n    holidays,\n    isLoading,\n    error\n  } = useCalendarStore(state => ({\n    schedule: state.schedule,\n    holidays: state.holidays,\n    isLoading: state.isLoading,\n    error: state.error\n  }));\n\n  // Extract year and month from the passed date prop\n  const year = date.getFullYear();\n  const month = date.getMonth();\n\n  // --- Event Handlers ---\n  // Centralize event handling to pass down to child components\n  const handlePersonClick = (person) => {\n    // Here you would typically trigger something, like opening a modal or side panel\n    console.log(\"Person clicked:\", person);\n    // Example: set an active profile in another store\n  };\n\n  // 2. Handle Loading and Error States\n  if (isLoading) {\n    return <div>Cargando calendario...</div>; // Replace with a proper skeleton loader if desired\n  }\n\n  if (error) {\n    return <div className=\"error-message\">Error: {error}</div>;\n  }\n\n  // 3. Orchestrate Child Component Rendering\n  return (\n    <div className=\"calendar-pro-wrapper\">\n      <ShiftLegend />\n      <div className=\"calendar-pro\">\n        <CalendarHeader />\n        <CalendarGrid \n          year={year}\n          month={month}\n          holidays={holidays}\n          shifts={schedule}\n          onPersonClick={handlePersonClick}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ProgrammingCalendar;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,wBAAwB;AACrD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAO,gCAAgC,CAAC,CAAC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA,SAAAC,MAAA,IAAAC,OAAA;AAcA,SAASC,mBAAmBA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACrC;EACA,MAAM;IACJC,QAAQ;IACRC,QAAQ;IACRC,SAAS;IACTC;EACF,CAAC,GAAGZ,gBAAgB,CAACa,KAAK,KAAK;IAC7BJ,QAAQ,EAAEI,KAAK,CAACJ,QAAQ;IACxBC,QAAQ,EAAEG,KAAK,CAACH,QAAQ;IACxBC,SAAS,EAAEE,KAAK,CAACF,SAAS;IAC1BC,KAAK,EAAEC,KAAK,CAACD;EACf,CAAC,CAAC,CAAC;;EAEH;EACA,MAAME,IAAI,GAAGP,IAAI,CAACQ,WAAW,CAAC,CAAC;EAC/B,MAAMC,KAAK,GAAGT,IAAI,CAACU,QAAQ,CAAC,CAAC;;EAE7B;EACA;EACA,MAAMC,iBAAiB,GAAIC,MAAM,IAAK;IACpC;IACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,MAAM,CAAC;IACtC;EACF,CAAC;;EAED;EACA,IAAIR,SAAS,EAAE;IACb,oBAAON,OAAA;MAAAiB,QAAA,EAAK;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAC5C;EAEA,IAAId,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAKsB,SAAS,EAAC,eAAe;MAAAL,QAAA,GAAC,SAAO,EAACV,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC5D;;EAEA;EACA,oBACErB,OAAA;IAAKsB,SAAS,EAAC,sBAAsB;IAAAL,QAAA,gBACnCjB,OAAA,CAACJ,WAAW;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfrB,OAAA;MAAKsB,SAAS,EAAC,cAAc;MAAAL,QAAA,gBAC3BjB,OAAA,CAACH,cAAc;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClBrB,OAAA,CAACF,YAAY;QACXW,IAAI,EAAEA,IAAK;QACXE,KAAK,EAAEA,KAAM;QACbN,QAAQ,EAAEA,QAAS;QACnBkB,MAAM,EAAEnB,QAAS;QACjBoB,aAAa,EAAEX;MAAkB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CAnDQF,mBAAmB;EAAA,QAOtBN,gBAAgB;AAAA;AAAA8B,EAAA,GAPbxB,mBAAmB;AAqD5B,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}