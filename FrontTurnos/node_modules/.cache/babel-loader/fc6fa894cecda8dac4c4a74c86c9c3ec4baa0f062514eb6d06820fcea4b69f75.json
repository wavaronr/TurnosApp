{"ast":null,"code":"var _jsxFileName = \"/home/user/calendario/src/context/CalendarContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { holidays } from '../components/holidays.js';\n\n// 1. Crear el Contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarContext = /*#__PURE__*/createContext();\n\n// Hook personalizado para consumir el contexto más fácilmente\nexport const useCalendar = () => {\n  _s();\n  const context = useContext(CalendarContext);\n  if (!context) {\n    throw new Error('useCalendar debe ser usado dentro de un CalendarProvider');\n  }\n  return context;\n};\n\n// 2. Crear el Proveedor del Contexto\n_s(useCalendar, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CalendarProvider = ({\n  children\n}) => {\n  _s2();\n  const [selectedWeek, setSelectedWeek] = useState(null);\n  const [yearSet, setYearSet] = useState(new Date().getFullYear());\n  const [monthCalendario, setMonthCalendario] = useState(new Date().getMonth());\n  const [colombianHolidays, setColombianHolidays] = useState([]);\n\n  // Efecto para cargar los festivos cuando el año cambia\n  useEffect(() => {\n    const fetchHolidays = async () => {\n      const holidaysData = await holidays(yearSet);\n      setColombianHolidays(holidaysData);\n    };\n    fetchHolidays();\n  }, [yearSet]);\n\n  // 3. El valor que será accesible por los componentes hijos\n  const value = {\n    selectedWeek,\n    setSelectedWeek,\n    yearSet,\n    setYearSet,\n    monthCalendario,\n    setMonthCalendario,\n    colombianHolidays\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s2(CalendarProvider, \"RSW98U3MwlktNINfIAyLt3UJLWs=\");\n_c = CalendarProvider;\nvar _c;\n$RefreshReg$(_c, \"CalendarProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","holidays","jsxDEV","_jsxDEV","CalendarContext","useCalendar","_s","context","Error","CalendarProvider","children","_s2","selectedWeek","setSelectedWeek","yearSet","setYearSet","Date","getFullYear","monthCalendario","setMonthCalendario","getMonth","colombianHolidays","setColombianHolidays","fetchHolidays","holidaysData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/calendario/src/context/CalendarContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { holidays } from '../components/holidays.js';\n\n// 1. Crear el Contexto\nconst CalendarContext = createContext();\n\n// Hook personalizado para consumir el contexto más fácilmente\nexport const useCalendar = () => {\n  const context = useContext(CalendarContext);\n  if (!context) {\n    throw new Error('useCalendar debe ser usado dentro de un CalendarProvider');\n  }\n  return context;\n};\n\n// 2. Crear el Proveedor del Contexto\nexport const CalendarProvider = ({ children }) => {\n  const [selectedWeek, setSelectedWeek] = useState(null);\n  const [yearSet, setYearSet] = useState(new Date().getFullYear());\n  const [monthCalendario, setMonthCalendario] = useState(new Date().getMonth());\n  const [colombianHolidays, setColombianHolidays] = useState([]);\n\n  // Efecto para cargar los festivos cuando el año cambia\n  useEffect(() => {\n    const fetchHolidays = async () => {\n      const holidaysData = await holidays(yearSet);\n      setColombianHolidays(holidaysData);\n    };\n    fetchHolidays();\n  }, [yearSet]);\n\n  // 3. El valor que será accesible por los componentes hijos\n  const value = {\n    selectedWeek,\n    setSelectedWeek,\n    yearSet,\n    setYearSet,\n    monthCalendario,\n    setMonthCalendario,\n    colombianHolidays,\n  };\n\n  return (\n    <CalendarContext.Provider value={value}>\n      {children}\n    </CalendarContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,QAAQ,QAAQ,2BAA2B;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,gBAAGP,aAAa,CAAC,CAAC;;AAEvC;AACA,OAAO,MAAMQ,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGP,UAAU,CAACI,eAAe,CAAC;EAC3C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;EAC7E;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,EAAA,CARaD,WAAW;AASxB,OAAO,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAIkB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EAChE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,IAAIkB,IAAI,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAC,CAAC;EAC7E,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;;EAE9D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMwB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,YAAY,GAAG,MAAMvB,QAAQ,CAACa,OAAO,CAAC;MAC5CQ,oBAAoB,CAACE,YAAY,CAAC;IACpC,CAAC;IACDD,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMW,KAAK,GAAG;IACZb,YAAY;IACZC,eAAe;IACfC,OAAO;IACPC,UAAU;IACVG,eAAe;IACfC,kBAAkB;IAClBE;EACF,CAAC;EAED,oBACElB,OAAA,CAACC,eAAe,CAACsB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAf,QAAA,EACpCA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACnB,GAAA,CA/BWF,gBAAgB;AAAAsB,EAAA,GAAhBtB,gBAAgB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}